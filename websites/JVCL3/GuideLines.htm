<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>JVCL Guidelines</TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1252">
<link rel="STYLESHEET" href="styles/default.css" type="text/css">
</head>

<BODY>
      <h1>JEDI VCL Guidelines</h1>
      <hr>
      <p>
                  &nbsp;</p>
      <p>
                  Coordinated by <a href="mailto:peter3@sourceforge.net">Peter Thörnqvist</a><BR>Version
                  1.01 (Draft 7) Feb 23, 2004</p>
      <p>
                  &nbsp;</p>
      <p>
                  Coordinated by <A 
                  href="mailto:mbeck1@compuserve.com">Michael 
                  Beck</A><BR>Version 1.00 (Draft 6) May 15, 
                  2002</p>
      <p>
                  &nbsp;</p>
      <h2><A 
                  name=contents>Contents</A></h2>
      <p>&nbsp;</p>
      <p>&nbsp;</p>
      <A 
                  href="#introduction">1 
                  -</A> INTRODUCTION
      <p><A 
                  href="#history">1.1</A> 
                  History<BR><A 
                  href="#trademarks">1.2</A> 
                  Trademarks<BR><A 
                  href="#borland3p">1.3</A> 
                  Relationship to Borland and third party<BR><A 
                  href="#delphiversions">1.4</A> 
                  Borland Delphi versions supported<BR><A 
                  href="#newusers">1.5</A> 
                  Queries from new users</p>
      <p>&nbsp;</p>
      <p>&nbsp;</p>
      <A 
                  href="#distribution">2 
                  -</A> DISTRIBUTION
      <p><A 
                  href="#opensource">2.1</A> 
                  Open Source<BR><A 
                  href="#grouping">2.2</A> 
                  Grouping Components into Packages<BR><A 
                  href="#repository">2.3</A> 
                  Official repository<BR>&nbsp;&nbsp;&nbsp;<A 
                  href="#libcontents">2.3.1</A> 
                  Contents</p>
      <p>&nbsp;</p>
      <p>&nbsp;</p>
      <A 
                  href="#policy">3 
                  -</A> POLICY ON INCLUDING COMPONENTS
      <p><A 
                  href="#rfp">3.1</A> 
                  Request for Proposal (RFP)<BR><A 
                  href="#bestcomponent">3.2</A> 
                  "Best Component"<BR><A 
                  href="#license">3.3</A> 
                  Legal License<BR><A 
                  href="#sourcecode">3.4</A> 
                  Source code<BR><A 
                  href="#submission">3.5</A> 
                  Proper submission<BR><A 
                  href="#quality">3.6</A> 
                  Quality and perceived usefulness</p>
      <p>&nbsp;</p>
      <p>&nbsp;</p>
      <A 
                  href="#maintenance">4 
                  -</A> LIBRARY MAINTENANCE&nbsp;PROCEDURE
      <p><A 
                  href="#selection">4.1</A> 
                  Selection procedure<BR><A 
                  href="#update">4.2</A> 
                  Update interval<BR><A 
                  href="#versioncontrol">4.3</A> 
                  Version control<BR><A 
                  href="#announcing">4.4</A> 
                  Announcing updates<BR><A 
                  href="#bugreports">4.5</A> 
                  Bug reports and fixes<BR>&nbsp;&nbsp;&nbsp;<A 
                  href="#patches">4.5.1</A> 
                  Patches<BR><A 
                  href="#techsupport">4.6</A> 
                  Technical Support<BR><A 
                  href="#cbuilder">4.7</A> 
                  C++ Builder Compatibility</p>
      <p>&nbsp;</p>
      <p>&nbsp;</p>
      <A 
                  href="#standards">5 
                  -</A> COMPONENT&nbsp;CODING STANDARDS
      <p><A 
                  href="#sections">5.1</A> 
                  Required sections for each component<BR>&nbsp;&nbsp;&nbsp;<A 
                  href="#header">5.1.1</A> 
                  Header (author name/etc, version 
                  control&nbsp;info)<BR>&nbsp;&nbsp;&nbsp;<A 
                  href="#prefixes">5.1.4</A> 
                  Usage of Prefixes in Code<BR>&nbsp;&nbsp;&nbsp;<A 
                  href="#assertions">5.1.5</A> 
                  Assertions<BR><A 
                  href="#names">5.2</A> 
                  Component names<BR><A 
                  href="#authority">5.3</A> 
                  Librarian's authority to change component 
                  names<BR>&nbsp;&nbsp;&nbsp;<A 
                  href="#changing">5.3.1</A> 
                  Changing a component name after it has been released<BR><A 
                  href="#formatting">5.4</A> 
                  Source code formatting<BR><A 
                  href="#comments">5.5</A> 
                  Comments in Code<BR><A 
                  href="#other">5.6</A> 
                  Other considerations</p>
      <p>&nbsp;</p>
      <p>&nbsp;</p>
      <A 
                  href="#designing">6 
                  -</A> COMPONENT DESIGN/ORGANIZATION
      <p><A 
                  href="#design">6.1</A> 
                  Component Design<BR>&nbsp;&nbsp;&nbsp;<A 
                  href="#inheritcomp">6.1.1</A> 
                  Inheritance vs. Composition<BR>&nbsp;&nbsp;&nbsp;<A 
                  href="#inheritance">6.1.2</A> 
                  Inheritance<BR>&nbsp;&nbsp;&nbsp;<A 
                  href="#scope">6.1.3</A> 
                  Method Scope<BR>&nbsp;&nbsp;&nbsp;<A 
                  href="#private">6.1.4</A> 
                  Private Fields/Variables<BR>&nbsp;&nbsp;&nbsp;<A 
                  href="#asm">6.1.5</A> 
                  ASM<BR>&nbsp;&nbsp;&nbsp;<A 
                  href="#reference">6.1.6</A> 
                  Reference to Design-time 
                  Units<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;in 
                  RunTime Code<BR>&nbsp;&nbsp;&nbsp;<A 
                  href="#ifdef">6.1.7</A> 
                  Usage of $IFDEF Conditional 
                  Compiler<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Directives<BR>&nbsp;&nbsp;&nbsp;<A 
                  href="#calls">6.1.8</A> 
                  Calls to Component Events<BR><A 
                  href="#packages">6.2</A> 
                  Packages<BR>&nbsp;&nbsp;&nbsp;<A 
                  href="#regist">6.2.1</A> 
                  Registration Units<BR>&nbsp;&nbsp;&nbsp;<A 
                  href="#unitorg">6.2.2</A> 
                  Organization into .PASs and .DPKs<BR>&nbsp;&nbsp;&nbsp;<A 
                  href="#pkgversion">6.2.3</A> 
                  Package Versioning<BR><A 
                  href="#compiling">6.3</A> 
                  Procedures for compiling components<BR>&nbsp;&nbsp;&nbsp;<A 
                  href="#borlanddelphi">6.3.1</A> 
                  Borland Delphi<BR><A 
                  href="#otherlibs">6.4</A> 
                  Functions requiring other libraries<BR><A 
                  href="#demo">6.5</A> 
                  Demo Project<BR><A 
                  href="#helpfile">6.6</A> 
                  Help File<BR><A 
                  href="#pkginstall">6.7</A> 
                  Package Installation<BR><A 
                  href="#resources">6.8</A> 
                  Resouces/Graphics<BR></p>
      <p>&nbsp;</p>
      <p>&nbsp;</p>
      <A 
                  href="#admin">7 
                  -</A> ADMINISTRATIVE DETAILS
      <p><A 
                  href="#librarian">7.1</A> 
                  Librarian<BR><A 
                  href="#documentor">7.2</A> 
                  Documentor (Help Team)<BR><A 
                  href="#referees">7.3</A> 
                  Referees<BR><A 
                  href="#transitions">7.4</A> 
                  Transitions<BR></p>
      <A 
                  href="#glossary"></A><BR><A 
                  href="#glossary">8 
                  -</A> GLOSSARY<BR><A 
                  href="#checklist"></A>
                  <P><A 
                  href="#checklist">9 
                  -</A> CHECKLIST<BR><A 
                  href="#history"></A>
                  <P><A 
                  href="#checklist">10 
                  -</A> VERSION HISTORY<BR>&nbsp;</P>
      <p>&nbsp;</p>
            <TABLE cellspacing="0" cellpadding="0">
              <TBODY>
              <TR>
                <TD width=475>
                  <h3><A name=introduction>1 - INTRODUCTION</A></h3>
                </TD>
                <TD align=middle width=100><A 
                  href="#contents">Contents</A></TD></TR></TBODY></TABLE>&nbsp;
      <p>This is a standard for establishing and 
            maintaining JEDI-VCL, an open source, user-supported library of 
            components designed to interface with Borland Delphi. You are 
            encouraged to read it over and forward comments to our newsgroups. You can subscribe at:</p>
      <P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="news://forums.talkto.net">news://forums.talkto.net</a> 

            <P>&nbsp;</P>

            <P>This document is "inherited" from similar work done by the 
            members of CompuServe Nantucket Forum (NANFORUM) for Clipper, and we 
            would like to acknowledge it gratefully here.</P>
      <p>&nbsp;</p>
      <h5>
      <A name=history>1.1 History</A></h5>
            <P>When Project JEDI ("Joint Endeavor of Delphi Innovators) was 
            formed in 1997 to translate API headers into Delphi, it was 
            envisaged that component writing - especially wrappers for the API 
            calls that are surfaced to Delphi through the translations - would 
            eventually become a project activity.&nbsp;
            <P>&nbsp;
            <P> In our recent reassertion of 
            the project's goals we confirmed that intention and expanded it to 
            encompass the general world of free components. Project JEDI intends 
            to work with Borland R &amp; D and its Code Central repository 
            project, as well as other developers and collectors of freeware 
            components, to bring this work into easy reach of all Delphi 
            developers. 
            <h5><A name=trademarks>1.2 Trademarks</A> 
      </h5>
            <P>Delphi is a registered trademark of Inprise Corporation. Inprise 
            Corporation will be referred to as Borland throughout this document. 

            <h5><A name=borland3p>1.3 Relationship to Borland and third party</A> 

      </h5>

            <P>JEDI-VCL is a project independent of any third party developer or 
            Borland. There is no official "sanction" or "seal of approval" from 
            Borland. Any decision to accept and include a component into the 
            JEDI-VCL components will be made without regard to the existence of 
            components performing similar functions in any commercial or 
            non-commercial third party or Borland product, provided no copyright 
            or patent restrictions are violated. 

            <P>&nbsp; 
            <P>The intention is not that JEDI-VCL should compete with third 
            party products but, rather, that it fill in the holes in Borland 
            Delphi's standard VCL library. Since overlaps of functionality 
            already occur between other third-party libraries, it is considered 
            impracticable to try to avoid them in our own considerations. 
            <P>&nbsp; 
            <P>Developers submitting JEDI-VCL components may be corporate 
            developers, third party developers, independent 
            consultant/programmers, hobbyists or any other people developing in 
            Delphi. Perhaps even Borland employees will contribute. No 
            individual is precluded from contributing on the basis of a 
            particular affiliation. 
            <P>&nbsp; 
            <P>If Borland employees submit components, they would do so as 
            individuals, with no implication made nor inference drawn that 
            Borland was either involved in the project or is committed to 
            supporting the public domain library. 
            <P>Borland is permitted and encouraged to include free of charge any 
            of the JEDI-VCL components in future releases of Delphi. 
            <h5><A name=delphiversions>1.4 Borland Delphi versions supported</A> 
      </h5>
            <P><b><font color="#800000">[TODO: change this to reflect current
            status]</font></b> 
            <P>JEDI-VCL components will be designed to work with the version of 
            Borland Delphi which is current at the time of release, as well as 
            the previous one if that is technically possible. For example, at 
            the time of this writing (September 1999) Delphi 5 (current) and 
            Delphi 4 (previous) would be supported. Many of the components will 
            be compatible with earlier versions of Borland Delphi. However, 
            ensuring compatibility will be the responsibility of the user. A 
            user wanting a component to work with other versions of Borland 
            Delphi will have to make the necessary modifications to the source 
            code. Nevertheless, a component's developer may choose to include 
            compiler switches to provide compatibility with earlier versions, at 
            his/her discretion. If support for prior versions is claimed, it 
            will be tested and validated by Project JEDI. 
            <P>&nbsp; 
            <P>Components published in the JEDI-VCL should work in the current 
            retail release of Delphi. In cases where a component author does not 
            have access to the current product release, Project JEDI will try to 
            assist by arranging for testing by other members who have the 
            current product release. 
            <P>&nbsp; 
            <P>Project JEDI will provide on the Web an overview showing what 
            product versions a published component was explicitly tested with. 
            When a new Delphi version is released, this overview will be updated 
            as the components are tested and verified against the new release. 
            <P>Code needs periodic maintenance to stay "current" - it may still 
            compile five versions later, but may not have kept up with evolving 
            UI or coding style. 
            <h5><A name=newusers>1.5 Queries from new users</A> 
      </h5>
            <P>Queries from new users interested in finding out about the 
            JEDI-VCL should be handled in a uniform and courteous way. An 
            information page will be created on this web site to explain what 
            the JEDI-VCL is and how to contact the people currently maintaining 
            it. A text message can be sent in response to any query.</P>
            <P>&nbsp;</P>
            <TABLE cellSpacing=0 border=0>
              <TBODY>
              <TR>
                <TD width=475>
                  <h3><A name=distribution>2 - DISTRIBUTION</A></h3>
                </TD>
                <TD align=middle width=100></TD></TR></TBODY></TABLE>
      <h5><A name=opensource>2.1 Open Source</A> 
      </h5>
            <P>JEDI-VCL, its source code, and documentation will be open source 
            software. It is not for sale and shall not be sold. Project JEDI 
            shall require no fee or contribution of any kind from anyone wanting 
            to download the software from the Project JEDI web site. A procedure 
            will be developed for submitting components through the web site. 
            <h5><A name=grouping>2.2 Grouping Components into Packages</A> 
      </h5>
            <P>JEDI-VCL will be provided in separate functional packages. To 
            ensure future compatibility, users of these packages will be 
            required to distribute only the official JEDI released packages. 
            This does not preclude developers from building their own packages 
            from the individual components.<BR>
            <P><b><font color="#800000">[TODO: change this to reflect current
            status]</font></b>
            <P>Currently we envisage following packages:</P>
            <TABLE>
              <TBODY>
              <TR>
                <TD width=96>JvGeneral</TD>
                <TD width=276>General Components</TD></TR>
              <TR>
                <TD width=96>JvDB</TD>
                <TD width=276>Database Components</TD></TR>
              <TR>
                <TD width=96>JvCOMM</TD>
                <TD width=276>Communication Components</TD></TR>
              <TR>
                <TD width=96>JvBusiness</TD>
                <TD width=276>General Business Components</TD></TR>
              <TR>
                <TD width=96>JVCL</TD>
                <TD width=276>Improved Delphi VCL Components</TD></TR>
              <TR>
                <TD width=96>JvGraphic</TD>
                <TD width=276>Graphic Components</TD></TR>
              <TR>
                <TD width=96>JvInstall</TD>
                <TD width=276>Install Components</TD></TR>
              <TR>
                <TD width=96>JvInternet</TD>
                <TD width=276>Internet Components</TD></TR>
              <TR>
                <TD width=96>JvMisc</TD>
                <TD width=276>Miscellaneous Components</TD></TR>
              <TR>
                <TD width=96>JvNet</TD>
                <TD width=276>Network Components</TD></TR>
              <TR>
                <TD width=96>JvWin</TD>
                <TD width=276>Windows related generic Components</TD></TR>
              <TR>
                <TD width=96>JvWinNT</TD>
                <TD width=276>Win NT specific Components</TD></TR>
              <TR>
                <TD width=96>JvWin95</TD>
                <TD width=276>Win 95 specific Components</TD></TR>
              <TR>
                <TD width=96>JvWin98</TD>
                <TD width=276>Win 98 specific Components</TD></TR>
              <TR>
                <TD width=96>JvReport</TD>
                <TD width=276>Report Components</TD></TR>
              <TR>
                <TD width=96>JvExperts</TD>
                <TD width=276>Experts/Wizards for Delphi IDE</TD></TR>
              <TR>
                <TD width=96>Other packages</TD>
                <TD width=276>to be added as needed</TD></TR></TBODY></TABLE>
      <h5><A name=repository>2.3 Official 
            repository</A>
      </h5>
            <P><b><font color="#800000">[TODO: change this to reflect current
            status]</font></b>
      <p><IMG src="images/vclmodel.gif" width="113" height="238"></p>
      It is possible that copies of JEDI-VCL 
            packages will be downloaded and distributed elsewhere. While this is 
            not discouraged, the only official copy of JEDI-VCL, its packages 
            and all associated documentation shall be that which is maintained 
            by volunteers in an appropriate library on the Project JEDI Web 
            site. 
            <h5><A name=libcontents>2.3.1 Contents</A> 
      </h5>
            <P><b><font color="#800000">[TODO: change this to reflect current
            status]</font></b> 
            <P>The deliverables that make up the official posting on Project 
            JEDI Web site shall be: 
            <P>2.3.1.1&nbsp;&nbsp;&nbsp; JV-TMP.ZIP 
            <P>Contains templates of the file and documentation header blocks, 
            including samples for prospective authors (JV-TMP.HLP, JV-TMP.PAS) 
            <P>2.3.1.2&nbsp;&nbsp;&nbsp; JEDI-VCL100.ZIP<BR>
            <P>Main JEDI-VCL Library Release 1.0. It will contain all the 
            packages, all components, and all documentation/Help files. Also 
            included will be a short information file used as a response to new 
            user queries (see paragraph 1.5) 
            <P>2.3.1.3&nbsp;&nbsp;&nbsp; JEDI XXX Library n for Delphi v.ZIP 
            <P>This is the individual zipped package (see 2.2) Release 
            &lt;n.&gt; for Delphi Release &lt;v&gt;. As stated in 1.4 the 
            supported Delphi release will be the current and the previous one. 
            <P>For example, a Zip file containing Release 1.0 of Internet 
            components for Delphi 5 would be called: 
            <P>"JEDI Internet Library 1.00 for Delphi 5.zip" 
            <P>and would support Delphi 4 and Delphi 5. 
            <P>2.3.1.4&nbsp;&nbsp;&nbsp; JV_XXX.ZIP<BR>
            <P>Individual components, available for download separately from 
            their respective packages. (e.g. JvWinSock.ZIP, normally part of the 
            Internet package "JEDI Internet library 1.00 for Delphi 5.zip"). 
            Developers may use them individually in their private packages. 
            <P>2.3.1.5&nbsp;&nbsp;&nbsp; Patch X for JEDI XXX Library n for 
            Delphi v.ZIP<BR>
            <P>Patch files (e.g. "Patch 2 for JEDI Internet library 1.00 for 
            Delphi 5.zip"- see 4.5.1). 
            <P>&nbsp;</P>
      <p>&nbsp;</p>
            <TABLE cellSpacing=0 border=0>
              <TBODY>
              <TR>
                <TD width=475>
                  <h3><A name=policy>3 - POLICY ON INCLUDING 
                  COMPONENTS</A></h3>
                </TD>
                <TD align=middle width=100></TD></TR></TBODY></TABLE>
      <h5><A name=rfp>3.1 Request for Proposal 
            (RFP)</A> 
      </h5>
            <P>If a need for a new component has been identified, Project JEDI 
            will place a RFP on the Web site, and send email to JEDI members. In 
            cases where a member identifies a need and submits a ready 
            component, its files shall be included in the RFP as a "Proof of 
            Concept". 
            <h5><A name=bestcomponent>3.2 "Best Component"</A> 
      </h5>
            <P>In the event that more than one developer submits components or 
            packages that perform substantially the same services, referees will 
            evaluate the alternatives according to their power, functionality, 
            flexibility, and ease of use and choose the one to be included. 
            Because of the cooperative, non-commercial nature of the library, no 
            contributor should feel offended when duplicate components need to 
            be excluded. 
            <P>When benefit is perceived from merging two substantially similar 
            components or packages to enhance functionality, the referees (see 
            paragraph 6.3) may exercise their prerogative to do so. The authors 
            would be closely involved in the process and the referees may choose 
            to a Request for Comments (RFC) to gain additional information from 
            the community and ensure a better design. 
            <h5><A name=license>3.3 Legal License</A> 
      </h5>
            <P>Each author submitting source code must include as part of that 
            code a statement that the work is original and that he or she is 
            placing the code into the public domain, or releasing it under the 
            MPL (see 5.1.1 and 5.1.2). The librarian (see paragraph 7.1) and 
            referees should make a reasonable effort to ensure that no copyright 
            source code, such as that supplied with some third party libraries, 
            finds its way into the JEDI-VCL. However, under no circumstances 
            will the librarian, referees, or any other party other than the 
            submitter be responsible for copyright code that appears in the 
            library accidentally. 
            <h5><A name=sourcecode>3.4 Source code</A></h5>
            <P>The author must provide full source code for every routine to be 
            included in JEDI-VCL. No routine will be considered for inclusion in 
            the library if only compiled code (DCU/BPL) is submitted. 
            <h5><A name=submission>3.5 Proper submission</A> 
      </h5>
            <P><b><font color="#800000">[TODO: change this to reflect current
            status]</font></b> 
            <P>Librarians and referees shall not be expected to repair 
            inconsistencies in documentation format, component naming, and other 
            requirements. Source code which does not arrive in proper format 
            will not be considered. 
            <P>&nbsp; 
            <P>The expected files are: 
            <P>&nbsp; 
            <UL>
              <LI>XXX.PAS (Main source file(s)) 
              <LI>XXX.DCR (Resource file(s)) 
              <LI>XXX_reg.PAS (Registration Unit for each individual component) 
              <LI>XXX_Mreg.PAS (Multi registration unit - for use by packages, 
              if they are included) 
              <LI>XXX.HLP (Help file) 
              <LI>XXX_Demo.ZIP (Demo project) 
              <LI>XXX_D50.DPK (Design package) 
              <LI>XXX_R50.DPK (RunTime Package) </LI></UL>
            <P>&nbsp;
            <P>Please note: we need separate registration units for individual 
            components, as well as for packages, to allow users the choice of 
            using the package provided by Project JEDI, or incorporating 
            individual components into their private packages. 
            <h5><A name=quality>3.6 Quality and perceived usefulness</A> 
      </h5>
            <P>In a cooperative effort like this, it will be difficult to 
            enforce some standard of quality and/or usefulness. For example, a 
            component to handle the military's "Zulu time" may be very useful to 
            some, and unnecessary to others. 
            <P>&nbsp; 
            <P>By virtue of its origins, the JEDI-VCL will be a mixture of some 
            components of very high quality and others perhaps not as fine. It 
            is up to the users to improve it. It will be complete in some areas 
            and quite sparse in others. It is up to the users to fill in the 
            holes. 
            <P>&nbsp; 
            <P>We shall err on the side of including "questionable" components, 
            provided they seem to work. Debates on the quality of the library's 
            source code will be encouraged and will take place in the proper 
            message section of the JEDI-VCL Mailing list.</P>
            <P>&nbsp;</P>
      <p>&nbsp;</p>
            <TABLE cellSpacing=0 border=0>
              <TBODY>
              <TR>
                <TD width=475>
                  <h3><A name=maintenance>4 - LIBRARY MAINTENANCE 
                  PROCEDURE</A></h3>
                </TD>
                <TD align=middle width=100></TD></TR></TBODY></TABLE>
      <h5><A name=selection>4.1 Selection 
            procedure</A> 
      </h5>
            <P>Source code will be submitted to the librarian, the documenter 
            (see paragraph 7.2), or one of the referees. Code will be added 
            after it is reviewed and approved by at least one, but preferably 
            two, referees. 
            <P>&nbsp; 
            <P>Code not meeting the documentation or source code formatting 
            standards will usually be returned to the author with instructions. 
            <P>&nbsp; 
            <P>Referees will test the submitted code. When the referees have 
            finished evaluating a submission, they will report their approval or 
            disapproval to the librarian, with comments. 
            <h5><A name=update>4.2 Update interval</A> 
      </h5>
            <P>As new components are submitted and added to the library, the 
            documentation will be updated. Because of the voluntary nature of 
            this project and the complexity involved in coordinating testing, 
            documentation, and delivery, there will be no fixed interval for 
            updates. Once the process is well under control we will aim to do 
            monthly updates. 
            <h5><A name=versioncontrol>4.3 Version control</A> 
      </h5>
            <P><b><font color="#800000">[TODO: change this to reflect current
            status]</font></b> 
            <P>JEDI-VCL packages will 
            use a numeric version number as follows:</P>
            <P>The major version will be 
            numeric, corresponding to current Delphi release, starting from 4 
            (the previous (supported) Delphi release  see 1.4).&nbsp; This will 
            change with each Delphi release. The minor version will change with 
            each update of the JEDI-VCL library package. </P>
            <P>Typical version numbers 
            might be 4.01, 4.11, 5.05, etc. </P>
            <P>Each component that doesnt descent from 
            JvComponent should implement published property AboutJVCL as it is 
            implemented in JvComponent.pas. This will enable the component to 
            display its version at the design time. </P>
            <h5><A name=announcing>4.4 Announcing updates</A> 
      </h5>
            <P><b><font color="#800000">[TODO: change this to reflect current
            status]</font></b> 
            <P>As the library and associated documentation are updated, simple 
            announcements will be posted on the Project JEDI home page, Delphi 
            newsgroups and the JEDI mailing list. These are the only places 
            where updates will be announced. An update announcement indicates 
            that it is immediately available for downloading from 
            ftp://delphi-jedi.org and through links on the JEDI Web site. 
            <h5><A name=bugreports>4.5 Bug reports and fixes</A> 
      </h5>
            <P>The librarian will correlate and verify all bug reports, with the 
            help of the referees. If the referees believe a bug to be serious, 
            they will arrange to have it fixed and the librarian will release a 
            maintenance upgrade immediately it is ready. If they consider it a 
            minor bug, it will be fixed but not installed for release until the 
            next scheduled upgrade. Such bug fixes may be released as "patches." 

            <h5><A name=patches>4.5.1 Patches</A> 
      </h5>
            <P><b><font color="#800000">[TODO: change this to reflect current
            status]</font></b> 
            <P>A "patch" is simply an ASCII text file containing instructions 
            for editing the source code to a misbehaving component or group of 
            components. 
            <P>&nbsp; 
            <P>Patches may appear on the JEDI Web site before a maintenance 
            release or quarterly upgrade. A patch file will be named according 
            to this scheme: <b> Patch X for JEDI XXX Library n for Delphi v.ZIP</b>,
            where &lt;X&gt; is a number starting from 1. Patches will be 
            numbered sequentially. Patches will be deleted every time a new 
            version of JEDI-VCL package goes on-line. 
            <h5><A name=techsupport>4.6 Technical Support</A> 
      </h5>
      <P>Technical support will work just as any technical subject on the 
            JEDI Web site works. Users will post questions and suggestions to a 
            particular mailing list or newsgroup, and anyone who knows the answer should 
            respond. No one is obliged to answer, but it is considered good form 
            to respond with something, even if one doesn't know the answer.<P>&nbsp; 
            <P>Support will include help on recompiling the components or 
            modifying the source. 
            <h5><A name=cbuilder>4.7 C++ Builder Compatibility</A> 
      </h5>
            <P><b><font color="#800000">[TODO: change this to reflect current
            status]</font></b> 
            <P>In order to assist users of Borland C++Builder, JEDI-VCL may need 
            to be tested with the current release of C++Builder, and modified as 
            needed. This should be done by a dedicated team with C++Builder 
            knowledge before any release of JEDI-VCL.</P>
      <p>&nbsp;</p>
            <TABLE cellSpacing=0 border=0>
              <TBODY>
              <TR>
                <TD width=475>
                  <h3><A name=standards>5 - COMPONENT CODING 
                  STANDARDS</A></h3>
                </TD>
                <TD align=middle width=100></TD></TR></TBODY></TABLE>&nbsp;
      <p>The purpose of this standard is to create 
            consistency among the components so that they may more easily 
            maintained and understood by all Borland Delphi developers, whether 
            novice and advanced. The referees may exercise some latitude with 
            respect to well-presented, pre-existing components that do not 
            exactly conform.</p>
      <p>&nbsp;</p>
      <p>However, it is extremely important that anyone submitting code 
            attach the proper headers and documentation and fill them out 
            correctly. This will make it much easier for code to be added to the 
            library.&nbsp;</p>
      <p>&nbsp;</p>
      <p>In general, we will follow the Delphi Style Guide, as published 
            by Charlie Calvert on the <A 
            href="http://community.borland.com/soapbox/techvoyage/article/1,1795,10280,00.html">Borland 
            Techvoyage</A> site.</p>
            <h5><A name=sections>5.1 Required sections for each component</A> 
      </h5>
            <h5><A name=header>5.1.1 Header (author name/etc, version control 
            info)</A> 
      </h5>
            <P>Figure 1 shows a header that must be included at the top of every 
            piece of source code submitted to the library. This header will work 
            with both Borland Delphi and C++Builder code.</P>
            <P>&nbsp;</P>
            <TABLE>
              <TBODY>
              <TR>
                <TD width=575 bgColor=#ECECEC><PRE>{-----------------------------------------------------------------------------
The contents of this file are subject to the Mozilla Public License 
Version 1.1 (the &quot;License&quot;); you may not use this file except in compliance 
with the License. You may obtain a copy of the License at 
http://www.mozilla.org/MPL/

Software distributed under the License is distributed on an &quot;AS IS&quot; basis, 
WITHOUT WARRANTY OF ANY KIND, either expressed or implied. See the License for 
the specific language governing rights and limitations under the License. 

The Original Code is: XXX.PAS, released YYYY-MM-DD.

The Initial Developer of the Original Code is Joe Doe &lt;joe.doe@email.com&gt;
Portions created by Joe Doe are Copyright (C) YYYY Joe Doe.  
Portions created by Microsoft are Copyright (C) YYYY Microsoft Corp.  
All Rights Reserved. 

Contributor(s): ______________________________________. 


Last Modified: 2000-mm-dd;
Current Version: X.XX

You may retrieve the latest version of this file at the Project JEDI's JVCL home page, 
located at http://jvcl.sourceforge.net

Known Issues: 
-----------------------------------------------------------------------------}
  </PRE></TD></TR></TBODY></TABLE>
      <A name=headersample>Figure 1 - 
            Standard component unit header</A><BR>
      <p>The "XXX.PAS" in the Original Code above 
            shall contain the source file name. This often differs from the 
            individual component name. For example, a component named TJvScreen 
            would be included in SCREEN.PAS. As a rule, source files (.PAS) 
            should not have the "TJv" or "Jv" prefixes.
      <p>&nbsp; 
            <P>The "Initial Developer" field should have the author's full name, 
            and email address. An email address is important, as this will make 
            bug fixing and other correspondence easier. 
            <h5>5.1.2 Mozilla License disclaimer 
      </h5>
            <P>Authors shall use only the standard header as in 5.1.1. Files 
            without the disclaimer will not be accepted. The exception would be where the original code was placed in the 
            Public Domain. In this case please replace the Mozilla License 
            notice with the following statement: 
            <P>&nbsp;</P>
            <TABLE>
              <TBODY>
              <TR>
                <TD width=575 bgColor=#ECECEC><PRE>{-----------------------------------------------------------------------------
This is an original work by Joe Doe and is hereby placed in the Public Domain.

The Original Code is: XXX.PAS, released 2000-06-15.

The Initial Developer of the Original Code is Joe Doe &lt;Joe.doe@email.com&gt;. 

Contributor(s): ______________________________________. 


Last Modified: 2000-06-15 
Current Version: X.XX

You may retrieve the latest version of this file at the Project JEDI's JVCL home page, 
located at http://jvcl.sourceforge.net

Known Issues: 
-----------------------------------------------------------------------------}
    </PRE></TD></TR></TBODY></TABLE>
      <h5>5.1.3 Procedure/Function block</h5>
            <P><b><font color="#800000">[TODO: change this to reflect current
            status]</font></b> 
            <P>&nbsp;</P>
            <P>Authors should also clearly document each procedures and 
            function, with appropriate indentation:</P>
            <TABLE>
              <TBODY>
              <TR>
                <TD width=575 bgColor=#ECECEC><PRE>{------------------------------------------------------------------------------
    Procedure: TJvScreen.DemoEventHandler
  Description: 
       Author: Joe Doe
 Date created: 2000-03-01
Date modified: yyyy-mm-dd by Jim Foo
      Purpose:
 Known Issues: 
 ------------------------------------------------------------------------------}

procedure TJvScreen.DemoEventHandler(
     Sender: TObject;       
     Col   : LongInt;       
     Row   : Longint;       
     Rect  : TRect;       
     State : TGridDrawState);  // Refer to notes

var
  i,
  j,
  ThisNum,
  ThatNum: integer;
  IsAlive,
  IsPurple: Boolean;

begin 
()
end;
  </PRE></TD></TR>
              <TR>
                <TD align=middle width=575><A name=functionheader>Figure 2 - 
                  Standard Procedure/Function 
Block</A></TD></TR></TBODY></TABLE>&nbsp;
      <h5><A name=prefixes>5.1.4 Usage of Prefixes in 
            Code</A> 
      </h5>
            <P>We recommend following guidelines for dealing with 
          Prefixes:</P>
            <TABLE cellSpacing=0 cellPadding=0 bgColor=#ffffcc>
              <TBODY>
              <TR>
                <TD width=354 bgColor=#ffffcc>prefix for components (as in 
                  TJvHtmlHelp)&nbsp;</TD>
                <TD width=66>YES</TD></TR>
              <TR>
                <TD width=354>prefix for field members (as in 
                FDefaultWindow)&nbsp;</TD>
                <TD width=66>YES</TD></TR>
              <TR>
                <TD width=354>prefix for classes (as in 
                TJvHtmlHelpRouter)&nbsp;</TD>
                <TD width=66>YES</TD></TR>
              <TR>
                <TD width=354>prefix for global variables (as in 
                  GHtmlHelpRouter)&nbsp;</TD>
                <TD width=66>YES&nbsp;</TD></TR>
              <TR>
                <TD width=354>prefix for Pointers (as in PMyPointer)&nbsp;</TD>
                <TD width=66>YES</TD></TR>
              <TR>
                <TD width=354>suffix for pointer variables (as in 
                  PopupDefsPtr)&nbsp;</TD>
                <TD width=66>YES</TD></TR>
              <TR>
                <TD width=354>prefix for enumerated types (as in 
                alBottom)&nbsp;</TD>
                <TD width=66>YES</TD></TR>
              <TR>
                <TD width=354>prefix/suffix for anything else&nbsp;</TD>
                <TD width=66>NO&nbsp;</TD></TR></TBODY></TABLE>
            <P></P>
      <h5>
      <A name=assertions>5.1.5 Assertions</A> 
      </h5>
            <P>It is a good coding technique to include Assertions within your 
            source code (short pre-condition and post-condition routines with 
            your component procedures/functions), which will be useful to end 
            users to understand the assumptions of the component's author. They 
            will be invoked only during an execution from within Delphi IDE, but 
            not compiled into the final version, so there is no penalty in using 
            them. 
            <h5><A name=names>5.2 Component names</A> 
      </h5>
            <P>All JEDI-VCL components will use the standard 'TJv' prefix to 
            distinguish them from other components (Please note: "J" is 
            capitalized). TJv has been registered to Project JEDI in the Delphi 
            Prefix Registry ('DPR') at <A 
            href="http://www.delphiprefixregistry.net/">http://www.delphiprefixregistry.net/</A>&nbsp; 

            <h5><A name=authority>5.3 Librarian's authority to change component 
            names</A> 
      </h5>
            <P>Some components will be submitted bearing either (1) a similar 
            name to another component in the library or (2) an inappropriate 
            name or prefix. For example, a component called TJvPrint that writes 
            a character to the screen could be said to be named inappropriately, 
            as it implies some relationship to a printer. The librarian shall 
            have the responsibility to rename submitted components to improve 
            clarity or permit uniqueness. 
            <h5><A name=changing>5.3.1 Changing a component name after it has 
            been released</A> 
      </h5>
            <P>Once a particular component is included in a library release, its 
            name should be frozen. To allow renaming would probably raise 
            problems for users who had used the previous name and were not 
            tracking the changes to the library. 
            <h5><A name=formatting>5.4 Source code formatting</A> 
      </h5>
            <P>Borland Delphi code shall be formatted in accordance with 
            standard currently defined by Borland for the Delphi VCL. As stated 
            above, at present we will follow the <A 
            href="http://community.borland.com/soapbox/techvoyage/article/1,1795,10280,00.html">Delphi 
            Style Guide</A>, as published by Charlie Calvert. The general goal is to provide a consistent format that is 
            recognized by all Borland Delphi developers. Deviations should be avoided. 
            <P>&nbsp; 
            <P>You can use following tools to assist you with code formatting: 
            <P><A 
            href="http://users.iafrica.com/a/as/asteele/delphi/codeformat/index.html">http://jedicodeformat.sourceforge.net/<BR></A><A 
            href="http://www.dow.wau.nl/aew/DelForExp.html">http://www.dow.wau.nl/aew/DelForExp.html</A> 

            <h5><A name=comments>5.5 Comments in Code</A> 
      </h5>
            <UL>
              <LI>Preferably maximum of ONE line to describe the purpose of a 
              method. 
              <LI>Comments should describe the code, not how to use it. 
              <LI>Within a method, include comments only for code that needs 
              explaining,<BR>NOT<BR><PRE>    Form1.Show // Shows Form</PRE>
              <LI>As a guide, keep to the ratio of 10 lines of code to 1 line of 
              comment. </LI></UL>
            <h5><A name=other>5.6 Other considerations</A> 
      </h5>
            <UL>
              <LI>Space characters: place one space after a comma or colon 
              symbol and place one space each side of an operator symbol ( +, -, 
              *, /, := , = , &lt;, &gt;, etc.) </LI></UL>
            <UL>
              <LI>No more than one command or variable declaration on one source 
              line. </LI></UL>
            <UL>
              <LI>If there is no method description then at least a separating 
              line (e.g. //------ to a width of 80 characters) should be placed 
              between methods. Often it is unnecessary to include an individual 
              description for each method, e.g. a method named CountErrors would 
              not require a description. </LI></UL>
            <UL>
              <LI>Use parentheses to increase readability of complex Boolean or 
              mathematical expressions, even where the rules of precedence for 
              evaluation would permit them to be optionally omitted. </LI></UL>
            <UL>
              <LI>Minimize the use of functions in Boolean expressions or other 
              situations where side effects might be difficult to trace.
              <LI>Explicit dereferencing (like in MyDynamicArray^[0]) is no 
              longer necessary and should be avoided wherever possible. </LI></UL>
            <UL>
              <LI>Structure function implementations so that they end at only 
              one point (its end keyword) and are not terminated by Exit (if 
              possible). </LI></UL>
            <UL>
              <LI>Labels with absolute jumps are considered bad programming 
              style (exception: assembler). </LI></UL>
      <p>&nbsp;</p>
            <TABLE cellSpacing=0 border=0>
              <TBODY>
              <TR>
                <TD width=475>
                  <h3><A name=designing>6 - COMPONENT 
                  DESIGN/ORGANIZATION</A></h3>
                </TD>
                <TD align=middle width=100></TD></TR></TBODY></TABLE>
      <h5><A name=design>6.1 Component Design</A> 
      </h5>
            <h5><A name=inheritcomp>6.1.1 Inheritance vs. Composition</A><BR>
      </h5>
            <P>We encourage use of Composition by utilizing Interfaces and 
            delegating tasks to other objects. Inheritance should be used mainly 
            for extending properties and methods in a "Is-a-Kind-of" 
            relationships. 
            <h5><A name=inheritance>6.1.2 Inheritance</A> 
      </h5>
            <P>The final component (TJvMyComponent) should descend from at least 
            one custom component (TJvMyCustomComponent). 
            <h5><A name=scope>6.1.3 Method Scope</A> 
      </h5>
            <P>Protected and Virtual methods are preferred for JEDI components. 
            Defining a method as Private is discouraged, unless consciously 
            applied for a reason. 
            <h5><A name=private>6.1.4 Private Fields/Variables</A> 
      </h5>
            <P>All 'Private' Fields/Variables should have associated Get and 
            (where it makes sense) Set 'Protected' methods. This allows easy 
            access to them in descendants, if required. 
            <h5><A name=asm>6.1.5 ASM</A> 
      </h5>
            <P>Assembler routines (ASM) are acceptable only for machine-level 
            glue logic that cannot be performed by high-level Pascal source 
            code. We will require source code comments to explain why 
            machine-level glue logic is required at all. Any author considering 
            submitting ASM code should seek advice on the mailing 
            list/newsgroups for an Object Pascal solution, before committing to 
            writing ASM code. 
            <P>ASM for the sole purpose of performance is prohibited except in 
            extreme cases, and even then should be accompanied by functionally 
            equivalent Pascal source in comments. See math.pas for examples. 
            <h5><A name=reference>6.1.6 Reference to Design-time Units in RunTime 
            Code</A> 
      </h5>
            <P>Please DO NOT refer in your RunTime code to DsgnIntf, LibIntf, or 
            any other design-time code. Starting with Delphi 6 separation of 
            design time code from runtime code became mandatory.&nbsp; 
            <h5><A name=ifdef>6.1.7 Usage of $IFDEF Conditional Compiler 
            Directives</A> 
      </h5>
            <P><b><font color="#800000">[TODO: change this to reflect current
            status]</font></b> 
            <P>Since we will be supporting only two consecutive releases of 
            Delphi, there should be no need to use $IFDEF directives. They make 
            code maintenance and readability difficult. Please DO NOT use them, 
            unless you can make a case to demonstrate that they are absolutely 
            required.<BR>
            <P>Project JEDI will provide a standard file containing conditional 
            directives. 
            <h5><A name=calls>6.1.8 Calls to Component Events</A> 
      </h5>
            <P><b><font color="#800000">[TODO: change this to reflect current
            status]</font></b> 
            <P>Events should be fired via overrideable methods, and the 
            component's implementation should call through such methods 
            exclusively (don't fire the event property directly). All calls to 
            component events should be directed via a virtual/dynamic method. If 
            the method is not expected to be overridden frequently by 
            descendents, the method should be declared dynamic to save on VMT 
            space. The performance difference between dynamic and virtual is 
            negligible for user-initiated events.<BR>
            <P> 
            <P>Instead of<BR>&nbsp; 
            <TABLE cellSpacing=0 cols=1 cellPadding=0 width=250 bgColor=#ffffcc 
            border=0>
              <TBODY>
              <TR>
                <TD>procedure TMyComp.WMLButtonDown(...)<BR>begin<BR>&nbsp; 
                  :<BR>&nbsp; if Assigned(FOnMouseDown) then ...<BR>&nbsp; 
                  :<BR>end;</TD></TR></TBODY></TABLE>
            <P>&nbsp;
            <P>use:<BR>&nbsp;<BR>&nbsp; 
            <TABLE cellSpacing=0 cols=1 cellPadding=0 width=400 bgColor=#ffffcc 
            border=0>
              <TBODY>
              <TR>
                <TD>procedure TMyComp.WMLButtonDown(...)<BR>begin<BR>&nbsp; 
                  :<BR>&nbsp; DoMouseDown(...) // DoMouseDown is a virtual 
                  method&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp; 
                  :<BR>end;</TD></TR></TBODY></TABLE>
            <P>&nbsp;
            <h5><A name=packages>6.2 Packages</A> 
      </h5>
            <h5><A name=regist>6.2.1 Registration Units</A> 
      </h5>
      <P>We require that each package should have a registration unit whose sole
      purpose is to register the components in the package. THis unit may not
      contain any additional code (like property editors). The name of the unit
      shold be &lt;package&gt;Reg.pas, i.e a package named JvCore would have a
      registration unit named JvCoreReg. 
            <P>&nbsp; 
            <h5><A name=unitorg>6.2.2 Organization into .PASs and .DPKs</A> 
      </h5>
            <P>Since many different people will be submitting components, it 
            will be generally desirable to house all components that belong 
            together in the same .PAS, or at least to group their units in the 
            same .DPK file. If there is some reason to split the .PAS, the 
            referees and the librarian will handle that as part of library 
            organization. 
            <P>&nbsp; 
            <h5><A name=pkgversion>6.2.3 Package Versioning</A> 
      </h5>
            <P><b><font color="#800000">[TODO: change this to reflect current
            status]</font></b> 
            <P>A clear and consistent versioning system is required, to avoid 
            any conflicts between packages. The JEDI-VCL will follow the model 
            established by the TurboPower® scheme: 
            <P>&nbsp; <PRE>PNNNMKVV.*
||  |||
||  ||+------ VV  VCL version (30=Delphi 3, 35=C++Builder 3,40=Delphi 4)
||  |+------- K   Kind of package (R=runtime, D=designtime, T-trialrun)
||  +-------- M   Product specific modifier (Underscore=default)
|+----------- NNN Product version number (e.g., 201=version 2.01)
+------------ P   Package name

</PRE> <p>For example, an Internet design package Version 1.0 for Delphi 5 would
      be:<br>
      <br>
  </p> <PRE>   JvInternet100_D50.BPL

</PRE> <p>The same package, but a Runtime version, would be:<br>
      <br>
  </p> <PRE>   JvInternet100_R50.BPL  </PRE> <PRE>&nbsp;</PRE>In order to allow usage of packages, 
            as well as building "private" packages from individual components, 
            we will "multi-registering unit" for all components, as well as 
            "registration unit" for each component (if justified). 
            <P>Below you can see a typical structure of JEDI-VCL packages: 
            <P><IMG src="images/packages.jpeg" width="682" height="361">
            <P>Please use this structure, so we can achieve a consistency across 
            JVCL components and simplify maintenance. We will just add your 
            Registration/Resource units, and your RunTime package to the JVCL 
            Design package, and we are in business :) 
            <h5><A name=compiling>6.3 Procedures for compiling components</A> 
      </h5>
            <h5><A name=borlanddelphi>6.3.1 Borland Delphi</A> 
      </h5>
            <P><b><font color="#800000">[TODO: change this to reflect current
            status]</font></b> 
            <P>Borland Delphi components will be compiled under the current and 
            previous release of Borland Delphi, with the Delphi default compiler 
            options:<BR><PRE>  {$A+,B-,C+,D+,E-,F-,G+,H+,I+,J+,K-,L+,M-,N+,O+,P+,Q-,R-,S-,T-,U-,V+,W-,X+,Y+,Z1}
  </PRE>and for the packages exclusively:<BR><PRE>       {$MINSTACKSIZE $00004000}
       {$MAXSTACKSIZE $00100000}
       {$IMAGEBASE $00400000}
  </PRE>where $IMAGEBASE should be adjusted by the librarian. 
            <P>Any deviations must be explained in the code. 
            <h5><A name=otherlibs>6.4 Functions requiring other libraries</A> 
      </h5>
            <P><b><font color="#800000">[TODO: change this to reflect current
            status]</font></b> 
            <P>&nbsp; 
            <P>JEDI-VCL can make no assumptions about the end user's capability 
            to link in any library other than the Delphi Standard version of 
            VCL. Therefore, no component will be added to JEDI-VCL that requires 
            any other third party component library, unless it is freely 
            available on the Web (e.g. RxLib). There might be, however, 
            subsections of JEDI-VCL requiring Pro and C/S versions of Delphi 
            VCL. 
            <P>Our general preferences are: 
            <P>1) Don't use any 3rd Party libs 
            <P>2) Copy code from 3rd Party libs (with permission and by giving 
            Credit) - this prevents future "update" incompatibles 
            <P>3) Make all 3rd Party libs used in a tested version available for 
            download on JEDI-VCL Site (they should not be included in JEDI-VCL 
            libs)<BR>
            <P>The 3rd Party functions/components should be placed in a separate 
            package.<BR>
            <P>JEDI will attempt to record accurately and associate the 
            version/build data of 3rd party libs with specific builds of the 
            TJv's that use them. It is essential that authors include this 
            information when submitting their source code.<BR>
            <h5><A name=demo>6.5 Demo Project</A> 
      </h5>
            <P>While a Demo Project is an optional part of the submitted 
            component, the author is encouraged to include a short Demo with the 
            code. Authors should seriously consider adding it, as it may become 
            a requirement in a future version of the JEDI-VCL. 
            <h5><A name=helpfile>6.6 Help File</A> 
      </h5>
            <P>We strongly 
            encourage providing a detailed Help file with each component in a 
            text format. This will help to keep the comments in code to a needed 
            minimum. Specifically: &nbsp;</P>
            <P> </P>
            <UL>
              <LI>
              <P>All
              details on how to use the component should be in a help file 
              </P>
              <LI>
              <P>Each 
              method should be documented together with a what it does 
              description. </P></LI></UL>
            <P>&nbsp;</P>
            <P>We are using Doc-O-Matic Help creation tool 
            donated to JEDI by ToolsFactory (<A 
            href="http://www.toolsfactory.com/">http://www.toolsfactory.com/</A>).&nbsp; 
            In order to make it easy to include your file in the overall Help 
            system, the file should have description for the all classes, and 
            for all major fields, properties, events, and methods, following the 
            format below (example for JvPanel). The elements to be filled are in 
            bold. Please also note the required @@ in the front of each of the 
            elements:&nbsp;&nbsp;</P>
            <P>&nbsp;</P>
            <TABLE cellSpacing=0 cols=1 cellPadding=0 width=637 bgColor=#ffffcc 
            border=0>
              <TBODY>
              <TR>
                <TD width=635>@@JvPanel.pas<BR><BR>Note:<BR>&lt;B&gt;Delphi 
                  Versions:&lt;/B&gt; &lt;COLOR Brown&gt;5, 6&lt;/COLOR&gt; 
                  &lt;B&gt;&nbsp;<BR><BR>C++ Builder Versions:&lt;/B&gt; 
                  &lt;COLOR 
                  Brown&gt;none&lt;/COLOR&gt;<BR><BR>Conditions:<BR>The contents 
                  of this file are subject to the Mozilla Public License Version 
                  1.1 (the "License"); you may not use this file except in 
                  compliance with the License. You may obtain a copy of the 
                  License at 
                  http://www.mozilla.org/MPL/MPL-1.1.html&nbsp;<BR><BR>Author:<BR>Sebastien 
                  Buysse<BR><BR>Version:<BR>1.20 
                  Beta<BR><BR>================================================================<BR>@@TJvPanel<BR>Description:<BR>This 
                  is an enhanced version of a TPanel with some new events like 
                  OnMouseEnter and OnMouseLeave, 
                  ...<BR><BR>================================================================<BR>@@TJvPanel.FColor<BR>Description:<BR>This 
                  field stores the Color value of the 
                  JvPanel<BR>================================================================<BR>@@TJvPanel.FOnMouseEnter<BR>Description:<BR>An 
                  event that occurs when the mouse pointer enters the borders of 
                  an editor.<BR>&nbsp; .<BR>&nbsp; .<BR>&nbsp; 
            .</TD></TR></TBODY></TABLE>
            <h5><A name=pkginstall>6.7 Package Installation</A> 
      </h5>
            <P><b><font color="#800000">[TODO: change this to reflect current
            status]</font></b> 
            <P>&nbsp; 
            <P>Packages will be provided with an installation program, which 
            will install them for the selected Delphi version. It will also back 
            up all old files being replaced. The installation program should 
            create the following subdirectory structure for each package 
            (supporting Delphi 5 and Delphi 6): 
            <P>&nbsp; 
            <TABLE>
              <TBODY></TBODY></TABLE>
            <TABLE cellSpacing=0 cellPadding=1 border=1>
              <TBODY>
              <TR>
                <TD>Subdirectory</TD>
                <TD>Purpose</TD></TR>
              <TR>
                <TD>\bin</TD>
                <TD>for bpl files</TD></TR>
              <TR>
                <TD>\demo</TD>
                <TD>for any demos/examples related to components</TD></TR>
              <TR>
                <TD>\help</TD>
                <TD>help files, plus additional help documents for merging 
                  into final help</TD></TR>
              <TR>
                <TD>\lib5</TD>
                <TD>for dcu and dcp files for delphi 5</TD></TR>
              <TR>
                <TD>\lib6</TD>
                <TD>for dcu and dcp files for delphi 6</TD></TR>
              <TR>
                <TD>\packages</TD>
                <TD>Package files for Delphi 5 and Delphi 6</TD></TR>
              <TR>
                <TD>\source</TD>
                <TD>all source files (incl. delphi units, packages, resource 
                  files)</TD></TR>
              <TR>
                <TD>\bitmaps</TD>
                <TD>bitmaps, rc files, batch files</TD></TR></TBODY></TABLE>
            <h5><A name=resources>6.8 Resources/Graphics</A> 
      </h5>
            <P>We need consistently looking bitmaps for Delphi IDE component 
            palette Icons. The current design contains little blue box with "J":&nbsp; 
            <P><b><font color="#800000">[TODO: change this to reflect current
            status]</font></b> 
            <P>&nbsp; 
            <P> 
            <IMG src="images/jicon.jpeg" width="42" height="41"> 
            <P>&nbsp; 
            <P>In the attachment, you will find following templates: 
            <P>&nbsp; 
            <UL>
              <LI>Design Package 
              <LI>RunTime Package 
              <LI>Registration Unit 
              <LI>Resource Unit 
              <LI>JVCL Bitmap 
              <LI>Delphi Component Unit </LI> 
              <LI>&nbsp; </LI></UL>You can create the Bitmaps for 
            IDE via ImageEditor, or you can directly compile with the Borland 
            Resource Compiler: 
            <P>Peter Mugaas recommended to use the Borland resource-compiler 
            (BRCC32) which is included in Borland Delphi. The .RC file is a 
            resource script containing information about the bitmaps (see 
            example below): 
            <P>&nbsp; 
            <P>/* JVCL components */<BR>TJVMYCOMPONENTA BITMAP " 
            TJVMYCOMPONENTA.BMP"<BR>TJVMYCOMPONENTB BITMAP " 
            TJVMYCOMPONENTB.BMP" 
            <P>&nbsp; 
            <P>Notice the links to the BMP files. These should be in the same 
            directory as the .RC file (i.e. \Source\Resource). Please use the 
            attached batch file to compile the script into a DCR file. Here is 
            the MakeDCR.Bat which you can use with JVCL, after you (it is in the 
            same directory as the .RC and .BMP files): 
            <P>&nbsp; 
            <P>brc32 JvMyComponentReg.rc -r -foJvMyComponentReg.dcr</P>
      <p>&nbsp;</p>
            <TABLE cellSpacing=0 border=0>
              <TBODY>
              <TR>
                <TD width=475>
                  <h3><A name=admin>7 - ADMINISTRATIVE 
                  DETAILS</A></h3>
                </TD>
                <TD align=middle width=100></TD></TR></TBODY></TABLE>
      <h5><A name=librarian>7.1 Librarian</A> 
      </h5>
            <P>The librarian will be the person who rebuilds the library from 
            the sources and uploads the resulting deliverables to the proper 
            JEDI library on JEDI Web site. The librarian generally does 
            <B>not</B> test code or edit source code to repair formatting 
            errors. 
            <h5><A name=documentor>7.2 Documentor (Help Team)</A> 
      </h5>
            <P>The documentor is responsible for maintaining the Help files and 
            keeping them in sync with each new release. Documentation should be 
            written in the same style and flavor as the Borland material, if 
            possible. Refer to the Borland Delphi documentation for more detail 
            and numerous examples. 
            <h5><A name=referees>7.3 Referees</A> 
      </h5>
            <P>Referees are volunteers who read source code, clean it up, 
            compile it, look for problems like potentially problematic Object 
            Pascal code, decide on which component is best, consolidate common 
            functions, etc. They make sure the header and documentation blocks 
            are present. There is no election or term for refereeship. One 
            simply volunteers for the task, performs it as long as one can and 
            bows out when necessary. 
            <h5><A name=transitions>7.4 Transitions</A> 
      </h5>
            <P>Not everyone will be able to stay around forever to keep working 
            on this project. Therefore, it is the responsibility of each 
            referee, documenter, or librarian to announce as far in advance as 
            possible his or her intention to leave, in order to give everyone a 
            chance to nominate a suitable replacement. 
            <P>&nbsp;</P> 
            <h4>Don't let it 
            die!</h4><I><BR>
            <P>&nbsp;</P></I>
<p>&nbsp;</p>
            <TABLE cellSpacing=0 border=0>
              <TBODY>
              <TR>
                <TD width=475>
                  <h3><A name=glossary>8 - 
                  GLOSSARY</A></h3>
                </TD>
                <TD align=middle width=100></TD></TR></TBODY></TABLE><B>
          GLOSSARY (work in progress)<BR></B>
            <TABLE>
              <TBODY>
              <TR>
                <TD vAlign=top width=139>RFP</TD>
                <TD width=557><B>Request for Proposal</B>. For <A 
                  href="http://www.omg.org/techprocess/faq_process.html">more 
                  detailed definition</A> refer to the OMG (Object Management 
                  Group) Web site.</TD></TR>
              <TR>
                <TD vAlign=top width=139>RFC</TD>
                <TD width=557><B>Request for Comments</B>. For <A 
                  href="http://www.omg.org/techprocess/faq_process.html">more 
                  detailed definition</A> refer to the OMG (Object Management 
                  Group) Web site.</TD></TR>
              <TR>
                <TD vAlign=top width=139></TD>
                <TD width=557></TD></TR>
              <TR>
                <TD vAlign=top width=139></TD>
                <TD width=557></TD></TR>
              <TR>
                <TD vAlign=top width=139></TD>
                <TD width=557></TD></TR>
              <TR>
                <TD vAlign=TOP9 width=13></TD>
                <TD width=557></TD></TR></TBODY></TABLE>
<p>&nbsp;</p>
            <TABLE cellSpacing=0 border=0>
              <TBODY>
              <TR>
                <TD width=475>
                  <h3><A name=checklist>9 - 
                  CHECKLIST</A></h3>
                </TD>
                <TD align=middle width=100></TD></TR></TBODY></TABLE>
            <P><b><font color="#800000">[TODO: change this to reflect current
            status]</font></b>
      <p>&nbsp;</p>
      <p>&nbsp;</p>
      <ul>
        <li>
          <p>Components 
            created using TJv prefix, and inherited from TJvComponent; 
            </li>
        <li>
          <p>If 
            a component is not a descendent of JvComponent, it implements a 
            published property AboutJVCL<BR>as it is implemented in 
            JvComponent.pas. </li>
        <li>
          <p>MPL 
            license notice added </li>
        <li>
          <p>Compiler 
            switches added </li>
        <li>
          <p>JEDI.inc 
            file added (if needed) </li>
        <li>
          <p>Code 
            is formatted using JVCL formatting standards </li>
        <li>
          <p>Components 
            saved in a file with Jv Prefix </li>
        <li>
          <p>Components 
            Register methods moved to Registration Unit </li>
        <li>
          <p>Separate 
            RunTime Package 
            created </li>
        <li>
          <p>Separate 
            DesignTime Package created (containing the Registration Unit, and 
            requiring the RunTime Package </li>
        <li>
          <p>Any 
            Property/Component Editors added (if needed) </li>
        <li>
          <p>Bitmap 
            files for IDE icons created </li>
        <li>
          <p>DRC 
            file containing the bitmaps compiled </li>
        <li>
          <p>Demo 
            project(s) included (recommended, but optional) 
            </li>
        <li>
          <p>Help
            file included (recommended, but optional) 
            </li>
      </ul>
      &nbsp;
<p>&nbsp;</p>
            <TABLE cellSpacing=0 border=0>
              <TBODY>
              <TR>
                <TD width=475>
                  <h3><A name=history>10 - VERSION 
                  HISTORY</A></h3>
                </TD>
                <TD align=middle width=100></TD></TR></TBODY></TABLE><B>Version 
            History:<BR></B>
            <TABLE border=1>
              <TBODY>
              <TR>
                <TD width=61>1999-07-28</TD>
                <TD width=514 nowrap>
                  <UL>
                    <LI>Added page numbering 
                    <LI>Removed couple of Clipper artifacts, still 
                    left from the original document 
                    <LI>Added 2.2.1.4: the user should have option 
                    to download only the required components, and not the whole 
                    library 
                    <LI>Changed 5.4.2 section on ASM - there will 
                    be no ASM code in the library. Go ObjectPascal 
                    <LI>Modified 1.4 and 5.6.1 - we will support 
                    the current and the previous version of Delphi 

                    <LI>Changed 5.6.1 - added compiler 
                    options 
                    <LI>Added new sub-section in 3.0 on RFP 
                    (Request for Proposal) 
                    <LI>Changed 4.3 on version control - there will 
                    be no monthly updates </LI></UL></TD></TR>
              <TR>
                <TD width=61> 
                  1999-08-16</TD>
                <TD width=514 nowrap>
                  <UL>
                    <LI>Changed 3.2 from "Request for Feedback" to 
                    "Request for Comments". This makes it consistent with OMG 
                    process 
                    <LI>Started a Glossary of terms 
                    <LI>Changed the Procedure Block header 
                    (5.1.3) 
                    <LI>Included rules for Prefixes (5.1.4) 
                    <LI>Made changes to 5.7 about usage of 
                    3<SUP>rd</SUP> Party Libraries 
                    <LI>Started Component Design Guidelines 
                    (6.1) 
                    <LI>Included Version Constant in 4.3 to allow 
                    version checking at runtime 
                    <LI>Changed "Tjv" to "TJv" capitalizing "j" to 
                    make the prefix more legible </LI></UL></TD></TR>
              <TR>
                <TD width=61> 
                  1999-09-07</TD>
                <TD width=514 nowrap>
                  <UL>
                    <LI>Changed 1.4 to add support for a previous 
                    version of Delphi. 
                    <LI>Created new section on Component 
                    Design/Organization 
                    <LI>Added front page 
                    <LI>Added Table of Content 
                    <LI>Changed 6.1.5 to allow ASM, but only in 
                    extreme situations 
                    <LI>Added 6.1.6 and 6.1.7 about reference to 
                    Design-time packages, and Conditional Defines 
                    <LI>Changed 4.7 - the JEDI-VCL will be provided 
                    in functional packages. 
                    <LI>Added section on Installation 
                    <LI>Added numbering scheme 
</LI></UL></TD></TR>
              <TR>
                <TD width=61> 
                  1999-09-15</TD>
                <TD width=514 nowrap>
                  <UL>
                    <LI>Added Purpose to Method Header 
                    <LI>Removed data stamps from 4.3 as a mechanism 
                    for versioning. 
                    <LI>Added new recommendations about code 
                    formatting and component design 
                    <LI>Extended names of packages to full names 
                    (instead of abbreviations) 
                    <LI>Changed the scheme for naming zip files 
                    containing JEDI packages </LI></UL></TD></TR>
              <TR>
                <TD width=61> 
                  2000-09-23</TD>
                <TD width=514 nowrap>
                  <UL>
                    <LI>Added Package structure diagram 
                    <LI>Added Resource/Graphic section 
                    <LI>Added Checklist </LI></UL></TD></TR>
              <TR>
                <TD width=61> 
                  2002-05-14</TD>
                <TD width=514 nowrap>
                  <UL>
                    <LI>Changed Versioning for components 
                    (4.3) 
                    <LI>Changed directory structure (6.7) 
                    <LI>Added example on Help (6.6) 
                </LI></UL></TD></TR>
              <TR>
                <TD width=61>2004-02-23</TD>
                <TD width=514 nowrap>
                  <ul>
                    <li>Reformatted to match new layout</li>
                  </ul>
                </TD></TR></TBODY></TABLE>
      <p>&nbsp;</p>
      <hr>
            <h3>Improvement suggestions submitted 
            by:</h3>
            <P>&nbsp; 
            <UL>
              <LI>Allan G. Lloyd 
              <LI>Marcel van Brakel
              <LI>Pavel Císar
              <LI>Robert Love
              <LI>Helen Borrie
              <LI>Phil Shrimpton
              <LI>Francois Piette
              <LI>Danny Thorpe
              <LI>Rodney Delanty
              <LI>Shiv Kumar
              <LI>Mike Lischke
              <LI>Alec Bergamini
            </UL>
      <p>&nbsp;</p>
      &nbsp;
      <h3>Open Issues:<BR></h3>
                  <UL>
                    <LI>Glossary - please provide suggestions what 
                    should be included</FONT> 
                    <LI>We need more Component Design rules</FONT> 
                    <LI>We need to decide on Naming scheme for 
                    packages, zip files, etc.</FONT> 
          </LI></UL>&nbsp;</BODY></HTML>
