--------------------------------------------------------------------------------
## Painter Objects: Types, Class references
--------------------------------------------------------------------------------
@@TJvInspectorPainterClass
<GROUP TJvInspector.Base>
Summary
  Painter class reference
Description
  TJvInspectorPainterClass is the painter class reference.
--------------------------------------------------------------------------------
## Painter Objects: Base class
--------------------------------------------------------------------------------
@@TJvInspectorPainter
<TITLEIMG TJvInspectorPainter>
<GROUP TJvInspector.Paint>
Summary
  Base inspector painter class.
Description
  TJvInspectorPainter is the base painter class for the data inspector. It
  provides methods and properties to aid in painting the various items in a
  specific style. Each style should be in it's own descendant.

  The base package provides two paint styles: Borland and Visual Studio/.NET.
--------------------------------------------------------------------------------
@@TJvInspectorPainter.Create
Summary
  Instantiates the painter.
Description
  Create instantiates a new painter object and assigns an inspector to it. In
  addition, the bitmaps for the collapse and expand buttons are generated.
  Descendants could therefor generate other button images if so desired.

  The inspector assigned to this painter will not use it until the Painter
  property of the inspector is set to this instance.
--------------------------------------------------------------------------------
@@TJvInspectorPainter.Destroy
Summary
  Disposes of the painter.
Description
  Destroy will dispose of the painter object, freeing the internal bitmaps.
--------------------------------------------------------------------------------
@@TJvInspectorPainter.ApplyNameFont
Summary
  Activates the name font.
Description
  ApplyNameFont sets the Canvas font to the font used to display the name.
  The base implementation sets this to the inspector font and selects the
  NameColor as the font color.
See Also
  ApplyValueFont, Canvas, NameColor
--------------------------------------------------------------------------------
@@TJvInspectorPainter.ApplyValueFont
Summary
  Activates the value font.
Description
  ApplyValueFont sets the Canvas font to the font used to display the value.

  The base implementation sets this to the inspector font and selects the
  ValueColor as the font color.
See Also
  ApplyNameFont, Canvas, ValueColor
--------------------------------------------------------------------------------
@@TJvInspectorPainter.BackgroundColor
Summary
  Background color of the inspector.
Description
  BackgroundColor indicates the color used to render the background of the
  inspector. Read Background to find out which color is used as the background
  color or set it to another value to change it.
--------------------------------------------------------------------------------
@@TJvInspectorPainter.ButtonImage
Summary
  Reference to the bitmap to use as a collapse/expand button.
Description
  ButtonImage holds a reference to the bitmap to use when the collapse/expand
  button for the current item should be rendered. If no button is to be
  rendered, this property is set to <B>nil</B>.
See Also
  GetCollapseImage, GetExpandImage
--------------------------------------------------------------------------------
@@TJvInspectorPainter.CalcButtonBasedRects
Summary
  Calculates rectangles for the expand/collapse button of an item.
Description
  CalcButtonBasedRects calculates the rectangles needed to render the
  expand/collapse button of an item.

  The base implementation does nothing. Descendants should override this method
  to calculate the needed rectangles.
See Also
  CalcEditBasedRects, CalcNameBasedRects, CalcValueBasedRects, SetupRects
--------------------------------------------------------------------------------
@@TJvInspectorPainter.CalcEditBasedRects
Summary
  Calculates rectangles for the edit control and button of an item.
Description
  CalcEditBasedRects calculates the rectangles needed to render the edit control
  and it's optional button of an item.

  The base implementation does nothing. Descendants should override this method
  to calculate the needed rectangles.
See Also
  CalcButtonBasedRects, CalcNameBasedRects, CalcValueBasedRects, SetupRects
--------------------------------------------------------------------------------
@@TJvInspectorPainter.CalcNameBasedRects
Summary
  Calculates rectangles for the name of an item.
Description
  CalcNameBasedRects calculates the rectangles needed to render the name of an
  item.

  The base implementation does nothing. Descendants should override this method
  to calculate the needed rectangles.
See Also
  CalcButtonBasedRects, CalcEditBasedRects, CalcValueBasedRects, SetupRects
--------------------------------------------------------------------------------
@@TJvInspectorPainter.CalcValueBasedRects
Summary
  Calculates rectangles for the value of an item.
Description
  CalcValueBasedRects calculates the rectangles needed to render the value of an
  item.

  The base implementation does nothing. Descendants should override this method
  to calculate the needed rectangles.
See Also
  CalcButtonBasedRects, CalcEditBasedRects, CalcNameBasedRects, SetupRects
--------------------------------------------------------------------------------
@@TJvInspectorPainter.Canvas
Summary
  Reference to the canvas to render to.
Description
  Canvas holds a reference to the canvas that is to be used to render the items
  on. It is initialized by a call to Setup.
See Also
  Setup
--------------------------------------------------------------------------------
@@TJvInspectorPainter.CategoryColor
Summary
  Background color for category items.
Description
  CategoryColor indicates the background color for category items. Read
  CategoryColor to find out which color is used as a background when rendering a
  category item or set it to another value to change it.
See Also
  CategoryTextColor, TJvInspectorCustomCategoryItem
--------------------------------------------------------------------------------
@@TJvInspectorPainter.CategoryTextColor
Summary
  Font color for selected items.
Description
  CategoryTextColor indicates the font color for category items. Read
  CategoryTextColor to find out which color is used for the font when rendering
  a category item or set it to another value to change it.
See Also
  CategoryColor, TJvInspectorCustomCategoryItem
--------------------------------------------------------------------------------
@@TJvInspectorPainter.DividerColor
Summary
  Pen color of the divider bar.
Description
  DividerColor indicates the pen color used to render the divider bar. Read
  DividerColor to find out which color is used to render the divider bar or set
  it to another value to change it.
See Also
  TJvCustomInspector.Divider
--------------------------------------------------------------------------------
@@TJvInspectorPainter.DividerWidth
Summary
  Returns the width of the divider bar
Description
  DividerWidth returns the width of the bar dividing the name and value column.

  The base implementation returns 1. Descendants can override this method to
  return another value.
See Also
  PaintDivider
--------------------------------------------------------------------------------
@@TJvInspectorPainter.DoPaint
Summary
  Renders the current item.
Description
  DoPaint renders the item that has just been setup. The Item property indicates
  the item to render while Rects hold the various calculated rectangles.
  ButtonImage will hold the image of the collapse/expand button if one is
  needed, or it is set to <B>nil</B> if no button is to be drawn. Use
  ApplyNameFont/ApplyValueFont to activate the font to render the name/value and
  use PaintDivider to render the divider bar.

  The base implementation does nothing. Descendants should override this method
  to do the actual painting.
--------------------------------------------------------------------------------
@@TJvInspectorPainter.GetCollapseImage
Summary
  Retrieves the image for a collapse button.
Description
  GetCollapseImage retrieves an image to use as a collapse button. If no bitmap
  has been assigned to the <LINK TJvCustomInspector.CollapseButton,
  Inspector.CollapseButton>, the internal image will be returned, otherwise the
  assigned bitmap will be returned.
See Also
  ButtonImage, GetExpandImage, TJvCustomInspector.CollapseButton
--------------------------------------------------------------------------------
@@TJvInspectorPainter.GetExpandImage
Summary
  Retrieves the image for an expand button.
Description
  GetExpandImage retrieves an image to use as an expand button. If no bitmap
  has been assigned to the <LINK TJvCustomInspector.ExpandButton,
  Inspector.ExpandButton>, the internal image will be returned, otherwise the
  assigned bitmap will be returned.
See Also
  ButtonImage, GetCollapseImage, TJvCustomInspector.ExpandButton
--------------------------------------------------------------------------------
@@TJvInspectorPainter.GetNameHeight
Summary
  Returns the height of the name font.
Description
  GetNameHeight will apply the name font and determine the TextHeight of 'Wy'.
  This result will be returned and the canvas is restored to it's original
  state.
See Also
  ApplyNameFont, GetValueHeight
--------------------------------------------------------------------------------
@@TJvInspectorPainter.GetValueHeight
Summary
  Returns the height of the value font.
Description
  GetValueHeight will apply the value font and determine the TextHeight of 'Wy'.
  This result will be returned and the canvas is restored to it's original
  state.
See Also
  ApplyValueFont, GetNameHeight
--------------------------------------------------------------------------------
@@TJvInspectorPainter.HideEditor
Summary
  Hides the editor.
Descripion
  Hide editor will hide the edit control and/or the value list box for the
  selected item. It does so by setting the item's iprEditValue rectange to an
  empty rectangle.
See Also
  TJvCustomInspector.Selected
--------------------------------------------------------------------------------
@@TJvInspectorPainter.InitializeColors
Summary
  Sets the color properties to their defaults.
Description
  InitializeColors presets the color properties to the defaults of the class,
  according to the RTTI info.

  The base implementation presets the following properties:
  * BackgroundColor
  * DividerColor
  * NameColor
  * ValueColor
  * CategoryColor
  * CategoryTextColor
  * SelectedColor
  * SelectedTextColor

  Descendants can override this method to preset additional properties.
See Also
  SetDefaultProp
--------------------------------------------------------------------------------
@@TJvInspectorPainter.Initializing
Summary
  Flag to indicate the painter is still initializing
Description
  Initializing indicates if the painter is still in the process of initializing
  itself. The Create constructor will set Initializing to True right before
  InitializeColors is called. Right after InitializeColors returns, Initializing
  is reset to False.

  Initializing is used in setter methods for the color properties to avoid calls
  to the <LINK TJvCustomInspector.InvalidateItem, Inspector.InvalidateItem>
  method during initialization.
--------------------------------------------------------------------------------
@@TJvInspectorPainter.Inspector
Summary
  Reference to the inspector.
Description
  Inspector holds a reference to the inspector that currently uses this painter.
See Also
  SetInspector
--------------------------------------------------------------------------------
@@TJvInspectorPainter.InternalCollapseButton
Summary
  Holds the internally created collapse button.
Description
  InternalCollapseButton is the internally created collapse button bitmap. Use
  this bitmap if you need to change the standard collapse button image.
See Also
  GetCollapseImage, InternalExpandButton
--------------------------------------------------------------------------------
@@TJvInspectorPainter.InternalExpandButton
Summary
  Holds the internally created expand button.
Description
  InternalExpandButton is the internally created expand button bitmap. Use
  this bitmap if you need to change the standard expand button image.
See Also
  GetExpandImage, InternalCollapseButton
--------------------------------------------------------------------------------
@@TJvInspectorPainter.Item
Summary
  Reference to the current item.
Description
  Item holds a reference to the item currently being painted.
See Also
  ItemIndex, PaintItem
--------------------------------------------------------------------------------
@@TJvInspectorPainter.ItemIndex
Summary
  The index of the current item.
Description
  ItemIndex holds the index into the <LINK TJvCustomInspector.VisibleItem,
  Inspector.VisibleItems> array of the item currently painted. If ItemIndex < 0,
  an item reference was supplied to the PaintItem method.
See Also
  Item, PaintItem
--------------------------------------------------------------------------------
@@TJvInspectorPainter.Loading
Summary
  Determines if the component is being loaded.
Description
  Loading returns True if the painter is being loaded. Loading is a short hand
  notation for csLoading <B>in</B> ComponentState.

  Loading is used in the set methods of the color properties to avoid calls to
  <LINK TJvCustomInspector.Invalidate, Inspector.Invalidate>.
--------------------------------------------------------------------------------
@@TJvInspectorPainter.NameColor
Summary
  Font color for item names.
Description
  NameColor indicates the font color used to render an item's name in (unless
  the item is either selected or a category, in which case SelectedTextColor or
  CategoryTextColor will be used respectively). Read NameColor to find out which
  font color is used to render an item's name, or set it to another value to
  change it.
See Also
  ValueColor, CategoryTextColor, SelectedTextColor
--------------------------------------------------------------------------------
@@TJvInspectorPainter.Paint
Summary
  Renders the inspector items.
Description
  Paint is the main rendering method. It will fill the
  <LINK TJvCustomInspector.ViewRect, Inspector.ViewRect> rectangle with the
  BackgroundColor, loop through currently visible items (calling PaintItem for
  each of them) and optionally hide the editor if the selected item is no longer
  being displayed.

  Paint assumes the background color has been set prior to calling Paint.
See Also
  BackgroundColor, PaintItem, Setup, TJvCustomInspector.ViewRect
--------------------------------------------------------------------------------
@@TJvInspectorPainter.PaintDivider
Summary
  Renders the name/value column divider bar at arbitrary positions.
Description
  PaintDivider is called whenever the name/value column divider bar needs to be
  rendered. Because this divider bar is also used to divide columns in compound
  items, the PaintDivider method can paint the divider at any location.

  The base implementation does nothing. Descendants should override this method
  to paint the divider bar.
Parameters
  X - X-position of the bar.
  YTop - Top of the divider bar.
  YBottom - Bottom of the divider bar.
--------------------------------------------------------------------------------
@@TJvInspectorPainter.PaintItem
Summary
  Renders an item.
Description
  PaintItem handles a request to render an item. The actual rendering will be
  done by the DoPaint method. PaintItem will setup the paint information before
  calling DoPaint and cleans up when DoPaint returns.

  PaintItem has two overloaded methods. The first method accepts a rectangle and
  an item index and will paint the specified item inside the rectangle,
  returning the rectangle not used.

  The second method will accept an item instance and will render it at the
  position it was last rendered in.
Parameters
  ARect - Available rectangle for the item. On exit, this parameter will hold
            the rectangle available after the item was rendered.
  AItemIndex - Index into the <LINK TJvCustomInspector.VisibleItems,
                Inspector.VisibleItems> array of the item to be rendered.
  AItem - Item instance to be rendered.
--------------------------------------------------------------------------------
@@TJvInspectorPainter.PaintRect
Summary
  Rectangle available to paint the item in.
Description
  PaintRect is the rectangle available to the item. SetupRects will use this
  rectangle to calculate the item's rectangle and TeardownItem will modify this
  rectangle to exlude to last rendered item.

  The Paint method will initialize PaintRect to the
  <LINK TJvCustomInspector.ViewRect, inspector's ViewRect>.
See Also
  Paint
--------------------------------------------------------------------------------
@@TJvInspectorPainter.Rects
Summary
  Reference to the item rectangles.
Description
  Rects is a reference to the current <LINK TJvCustomInspectorItem.Rects, item's
  Rects> property. If there is no current item, setting a rectangle does
  nothing, while reading will return an empty rectangle.
--------------------------------------------------------------------------------
@@TJvInspectorPainter.SetInspector
Summary
  Attach the painter to an inspector.
Description
  SetInspector attaches the painter to the specified inspector. If the
  inspector's Painter property is not set to this painter, an exception will be
  raised.
See Also
  TJvCustomInspector.Painter
--------------------------------------------------------------------------------
@@TJvInspectorPainter.Setup
Summary
  Initializes the painter.
Description
  Setup initializes the painter to use the specified canvas and initializes the
  Canvas.Brush.Color to the BackgroundColor.

  Setup is called by the <LINK TJvCustomInspector.Paint, Inspector.Paint> method
  before it issues the paint request.

  Descendants can override this method to do additional initialization if
  needed.
See Also
  BackgroundColor, Canvas, <LINK TJvCustomInspector.Paint>
--------------------------------------------------------------------------------
@@TJvInspectorPainter.SetupItem
Summary
  Initializes item painting.
Description
  SetupItem will initialize the painter to render the specified item. On entry
  to this method, either Item or ItemIndex has been set by the PaintItem method.
  Depending on which is set the following actions will be taken:
  * If ItemIndex is set, the corresponding item will be retrieved and stored in
    the Item property.
  * If an item is available, the BUttonImage will be set to either <B>nil</B>,
    the bitmap returned by GetCollapseImage or the bitmap returned by
    GetExpandImage.
  * If an item index was specified, SetupRects is called to calculate the item
    rectangles.

  Descendants can override this method to do additional initialization if
  needed.
See Also
  PaintItem, Setup, SetupRects, TeardownItem 
--------------------------------------------------------------------------------
@@TJvInspectorPainter.SetupRects
Summary
  Initializes item rectangles.
Description
  SetupRects initializes the items rectangles to their proper values. It will
  set the item's iprItem rectangle to the paint rectangle, setting the bottom
  value to PaintItem.Top + <LINK TJvCustomInspectorItem.Height, Item.Height>.

  Descendants should override this method to initialize the other rectangles.
See Also
  PaintItem, Setup, SetupItem
--------------------------------------------------------------------------------
@@TJvInspectorPainter.SelectedColor
Summary
  Background color for selected items.
Description
  SelectedColor indicates the background color for selected items. Read
  SelectedColor to find out which color is used as a background when an item is
  selected or set it to another value to change it.
See Also
  SelectedTextColor
--------------------------------------------------------------------------------
@@TJvInspectorPainter.SelectedTextColor
Summary
  Font color for selected items.
Description
  SelectedTextColor indicates the font color for selected items. Read
  SelectedTextColor to find out which color is used for the font when an item is
  selected or set it to another value to change it.
See Also
  SelectedColor
--------------------------------------------------------------------------------
@@TJvInspectorPainter.TeardownItem
Summary
  Finalizes item rendering
Description
  TeardownItem finalizes the item rendering process. The PaintRect will be
  adjusted in such a way that is starts just below the item just painted.

  Descendants can override this method to do additional finalization if needed.
See Also
  SetupItem
--------------------------------------------------------------------------------
@@TJvInspectorPainter.ValueColor
Summary
  Font color for item values.
Description
  ValueColor indicates the font color used to render an item's value. Read
  ValueColor to find out which font color is used to render an item's value, or
  set it to another value to change it.
See Also
  NameColor
--------------------------------------------------------------------------------
## Painter Objects: Common class for Borland and .NET styles
--------------------------------------------------------------------------------
@@TJvInspectorBorlandNETBasePainter
<TITLEIMG TJvInspectorPainter>
<GROUP TJvInspector.Paint>
Summary
  Base inspector painter class common for Borland and .NET styles.
Description
  TJvInspectorBorlandNETBasePainter is the common base painter class for the
  Borland and .NET paint styles. It implements many of the methods to setup
  the various item rectangles, fonts and colors in such a way that is common for
  the Borland and .NET styles.
--------------------------------------------------------------------------------
## Painter Objects: Borland style
--------------------------------------------------------------------------------
@@TJvInspectorBorlandPainter
<TITLEIMG TJvInspectorBorlandPainter>
<GROUP TJvInspector.Paint>
Summary
  Inspector painter class for Borland style.
Description
  TJvInspectorBorlandPainter is the painter class that implements the Borland
  paint style.
--------------------------------------------------------------------------------
@@TJvInspectorBorlandPainter.DividerLightColor
Summary
  Pen color of the light side of the divider bar.
Description
  DividerLightColor indicates the pen color used to render the lighter part of
  the divider bar (the line on the right). Read DividerLightColor to find out
  which color is used to render the right side of the divider bar or set it to
  another value to change it.
See Also
  DividerColor, TJvCustomInspector.Divider
--------------------------------------------------------------------------------
## Painter Objects: .NET / Visual Studio style
--------------------------------------------------------------------------------
@@TJvInspectorDotNETPainter
<TITLEIMG TJvInspectorDotNETPainter>
<GROUP TJvInspector.Paint>
Summary
  Inspector painter class for .NET / Visual Studio style.
Description
  TJvInspectorDotNETPainter is the painter class that implements the .NET /
  Visual Studio paint style.
--------------------------------------------------------------------------------

