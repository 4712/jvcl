## Needs review (peter3)
----------------------------------------------------------------------------------------------------
@@JvPageListTreeView.pas
<GROUP JVCL.FileRef>
Summary
  Contains the IPageList interface as well as the TJvPageListTreeView, TJvPageList and TJvSettingsTreeView components.
<INCLUDE JVCL.UnitText.dtx>
Author
  Peter Thörnqvist
----------------------------------------------------------------------------------------------------
@@EPageListError
Summary
  EPageListError is the exception class used by page list components.
Description
  EPageListError is raised by the components TJvPageListTreeView, TJvPageList and the TJvSettingsTreeView 
  when an error occurs, f ex when you try to assign a component to the PageList property of the TJvPageListTreeview
  that doesn't implement the IPageList interface.
----------------------------------------------------------------------------------------------------
@@IPageList
Summary
  An interface that must be implemented by controls that wants to be assignable to the PageList property
  of other controls.
Description
  IPageList should be implemented by controls that should be assignment compatible with the PageList property of
  other controls. F ex, the TJvPageList control implements this interface making it possible to use it in combination
  with the TJvSettingsTreeview and TJvPageListTreeView controls.

  The methods of IPageList is called by the IPageList consumer (any component that have an writeable
  IPageList property). F ex, TJvPageListTreeView calls the methods of the IPageList assigned to it's
  PageList property when the selected node is changed.
----------------------------------------------------------------------------------------------------
@@IPageList.CanChange@integer
Summary
  Used do determine if a page can be activated.
Description
  CanChange is called by the IPageList consumer when it needs to know if the IPageList implementation can
  make a page active.
Parameters
  AIndex - the 0-based index of the page to check if it can be activated.
Return Value
  Should return true if the page at AIndex can be activated or false otherwise. If AIndex is outside the allowable range for th epage list, return false.
----------------------------------------------------------------------------------------------------
@@IPageList.SetActivePageIndex@integer
Summary
  Changes the currently active page.
Description
  SetActivePageIndex is called by the IPageList consumer when it wants to change the currently active page. A call to
  SetActivePageIndex is mostly preceded by a call to CanChange and SetActivePageIndex is only called if CanChange returns true
Parameters
  AIndex - the new 0-based index of the page to make the active page. If AIndex is outside the range of the page list,
           the IPageList implementation should do nothing
----------------------------------------------------------------------------------------------------
@@IPageList.getPageCount
Summary
  Returns the number of available pages.
Description
  getPageCount is called by the IPageList consumer when it needs to know how many pages are in the page list.
Return Value
  Returns the number of pages in the IPageList implementation or 0 if it is empty.
----------------------------------------------------------------------------------------------------
@@IPageList.getPageCaption@integer
Summary
  Returns the caption for a page.
Description
  getPageCaption is called by the IPageList user to retrieve the display name of a specific page.
  The getPageCaption is only called at design-time when the IPageList consumer needs to display the
  pages in the IPageList implementation in it's own design editor(s).
Parameters
  AIndex - the 0-based index of the page whose caption is to be returned.
Return Value
  A string representing the caption of the page. If AIndex is outside the allowable range, this function shold return an
  empty string or the value "unknown" or similar and not raise an exception or generate an error.
----------------------------------------------------------------------------------------------------
@@TJvCustomPage
Summary
  TJvCustomPage is the base class for a page used by a page list component.
Description
  Don't create instances of TJvCustomPage. Instead, use it as a base class to derive new page classes from when
  you implement your own TJvCustomPageList descendant. TJvCustomPage defines and implements the basic behavior for a
  page in a TJvCustomPageList.
----------------------------------------------------------------------------------------------------
@@TJvCustomPage.AboutJVCL
  <INCLUDE JVCL.Main.AboutJVCL.dtx>
----------------------------------------------------------------------------------------------------
@@TJvCustomPage.Height
Summary
  Specifies the vertical size of the page in pixels.
Description
  Use the Height property to read or change the height of the page. Pages are ordinarily client aligned to the parent
  page list control and changing the height has no effect. In page list descendants that doesn't client align the pages,
  changing the height will probably have effect on the page.
See Also
  Top, Left, Width
----------------------------------------------------------------------------------------------------
@@TJvCustomPage.Left
Summary
  Specifies the horizontal coordinate of the left edge of the page relative to it's parent.
Description
  Use the Left property to determine where the left side of the page begins or to reposition the left side of the page.
  Pages are ordinarily client aligned to the parent page list control and changing the Left property has no effect. In page
  list descendants that doesn't client align the pages, changing the Left property will have effect on the page.
  The Left and Top properties are relative to the parent page list control.
See Also
  Top, Height, Width
----------------------------------------------------------------------------------------------------
@@TJvCustomPage.OnAfterPaint
Summary
  Called after the page has been painted.
Description
  OnAfterPaint is of type TJvPagePaintEvent and is called after the control has painted itself. Assign an event handler to this event
  to perform any special drawing after the default painting has completed.
Parameters
  Sender - the page that called this event
  ACanvas - the canvas to draw on
  ARect - the rect area to draw within
See Also
  OnBeforePaint
----------------------------------------------------------------------------------------------------
@@TJvCustomPage.OnBeforePaint
Summary
  Called before the page is painted.
Description
  OnBeforePaint is of type TJvPageCanPaintEvent and is called just prior to painting. Assign an event handler to this event
  to perform any special drawing before the default painting has started. To supress normal drawing, set the DefaultDraw parameter to false.
Parameters
  Sender      - The control that is calling this event.
  ACanvas     - The canvas to draw on
  ARect       - The rect area to draw within
  DefaultDraw - Variablet hat determines if the default drawing is to be performed after the event returns. Set this to false to supress normal drawing of the page.
----------------------------------------------------------------------------------------------------
@@TJvCustomPage.OnCtl3DChanged
Summary
  Occurs when the Ctl3D property of the control changes.
Description
  Write an OnCtl3DChanged event handler to take specific action when the Ctl3D property changes.
----------------------------------------------------------------------------------------------------
@@TJvCustomPage.OnHide
Summary
  Occurs when the page is hidden.
Description
  Write an OnHide event handler to take specific action when the control is hidden.
----------------------------------------------------------------------------------------------------
@@TJvCustomPage.OnMouseEnter
Summary
  Occurs when the mouse pointer moves into the page.
Description
  Write an OnMouseEnter event handler to take specific action when the user moves the mouse over the
  page.
See Also
  OnMouseLeave
----------------------------------------------------------------------------------------------------
@@TJvCustomPage.OnMouseLeave
Summary
  Occurs when the mouse pointer moves off the page.
Description
  Write an OnMouseLeave event handler to take specific action when the user moves the mouse off the
  page. For example, you can use this event to undo changes that were made in an OnMouseEnter
  event handler.
See Also
  OnMouseEnter
----------------------------------------------------------------------------------------------------
@@TJvCustomPage.OnPaint
Summary
  Occurs when the control is painted.
Description
  Write an OnPaint event handler to take specific action when the control is painted.
----------------------------------------------------------------------------------------------------
@@TJvCustomPage.OnParentColorChange
Summary
  Occurs when the Parents color changes.
Description
  Write an OnParentColorChange event handler to take specific action when the Parents color changes.
----------------------------------------------------------------------------------------------------
@@TJvCustomPage.OnShow
Summary
  Occurs when the page is shown.
Description
  Write an OnShow event handler to take specific action when the page is shown.
----------------------------------------------------------------------------------------------------
@@TJvCustomPage.PageIndex
Summary
  The index of this page.
Description
  Read PageIndex to determine where the page is placed in the parents Pages array.
  Set PageIndex to change the place of the page in the Pages array. PageIndex is 0-based, that is,
  the first page in the Pages array has Index 0 and the last page has index PageCount - 1
See Also
  TJvCustomPageList.Pages, TJvCustomPageList.PageCount
----------------------------------------------------------------------------------------------------
@@TJvCustomPage.PageList
Summary
  Reference to the PageList that owns this page.
Description
  Specifies the PageList that owns this page. Change PageList to move the page to another page list control.

  To create and add a page to a page list at run-time, create the page and set it's PageList property to the
  page list control that should contain it.
----------------------------------------------------------------------------------------------------
@@TJvCustomPage.Top
Summary
  Specifies the Y coordinate of the top left corner of a page, relative to it's parent or containing control in pixels.
Description
  Use Top to locate the top of the control or reposition the page to a different Y coordinate.
  The Top property, like the Left property, is the position of the page relative to it's container.
  Thus, if a control is contained in a TPanel, the Left and Top properties are relative to the panel.
Note
  If the page is client aligned (the default), changing the Top property will have no effect.
See Also
  Width, Left, Height
----------------------------------------------------------------------------------------------------
@@TJvCustomPage.Width
Summary
  Specifies the horizontal size of the control or form in pixels.
Description
  Use the Width property to read or change the width of the control.
Note
  If the page is client aligned (the default), changing it's width will have no effect.
See Also
  Top, Left, Height
----------------------------------------------------------------------------------------------------
@@TJvCustomPageClass
Summary
  The class type of TJvCustomPage classes
Description
  TJvCustomPageClass is the class type for TJvCustomPage and descendants.
  This type is returned by the <LINK TJvCustomPageList.GetPageClass, GetPageClass> function. 
----------------------------------------------------------------------------------------------------
@@TJvCustomPageList
Summary
  TJvCustomPageList is the base class for page list components.
Description
  Use TJvCustomPageList as a base class when defining a control that should contain a series of pages where
  only one page is visible at a time. A page list is very similar to a <LINK TPageControl,TPageControl>
  but it's pages does not have any tabs.

  Do not create instances of TJvCustomPageList. To put a page list on a form,
  use a descendant of TJvCustomPageList, such as <LINK TJvPageList,TJvPageList>.
----------------------------------------------------------------------------------------------------
@@TJvCustomPageList.AboutJVCL
  <INCLUDE JVCL.Main.AboutJVCL.dtx>
----------------------------------------------------------------------------------------------------
@@TJvCustomPageList.ActivePage
Summary
  Specifies the page currently displayed by the page list control.
Description
  Read ActivePage to determine which page is selected by the user.
  Set ActivePage to bring a page to the foreground. Only one page can be active at a time.
  To change the ActivePage to the page that precedes or follows the active page, use the
  <LINK TJvCustomPageList.FindNextPage,FindNextPage> method.
See Also
  ActivePageIndex, FindNextPage
----------------------------------------------------------------------------------------------------
@@TJvCustomPageList.ActivePageIndex
Summary
  Specifies the page currently displayed by the page list control.
Description
  Use ActivePageIndex to get or set the active page by index rather than by object.
  The value of ActivePageIndex identifies a page in the <LINK Pages,Pages> property array.
  Changing the value of ActivePageIndex changes the <LINK ActivePage,ActivePage> property, and vice versa.

  If there is no active page, reading ActivePageIndex gives a value of 1.

  Setting ActivePageIndex to a value that is out of bounds (less than 0 or greater than PageCount - 1)
  results in the page list control having no active page.

See Also
  ActivePage
----------------------------------------------------------------------------------------------------
@@TJvCustomPageList.FindNextPage
Summary
  Returns the page in the page list control before or after a specified page.
Description
  Call FindNextPage to locate a page in the page list control by it's position relative to the
  page specified by the CurPage parameter. If the GoForward parameter is true, FindNextPage returns
  the next page in the page list control after CurPage. If GoForward is false, FindNextPage returns the previous page.

  If CurPage is not a page in the page list control, FindNextPage returns the first page when GoForward is true
  or the last page when GoForward is false. If GoForward is true and CurPage is the last page in the page list control,
  FindNextPage returns the first page. If GoForward is false and CurPage is the first page in the page list control,
  FindNextPage returns the last page.

  When IncludeDisabled is true, FindNextPage returns the next page even if it is disabled, if IncludeDisabled is false,
  FindNextPage returns the next enabled page.

Parameters
  CurPage         - the page where the search starts
  GoForward       - set to true to search forward or to false to search backwards in the Pages array
  IncludeDisabled - set to true if you want to include disabled pages in the search, set to false to only include enabled pages
Return value
  Returns the found page or nil if no matching page was found.
See Also
  Pages
----------------------------------------------------------------------------------------------------
@@TJvCustomPageList.GetPageClass
Summary
  Returns the class type for the pages in the page list control
Description
  GetPageClass returns the class used to create pages in the page list. Override this method to return your
  own TJvCustomPage class in descendants of TJvCustomPageList.
Return value
  The class type of pages created by the page list.
----------------------------------------------------------------------------------------------------
@@TJvCustomPageList.NextPage
Summary
  Activates the page after the active page.
Description
  Call NextPage to activate the next page after the active page. If the last page is active, NextPage moves to the first page.
  If there are no pages in the list or only one page, NextPage does nothing.
See Also
  PrevPage
----------------------------------------------------------------------------------------------------
@@TJvCustomPageList.OnChange
Summary
  Occurs immediately after a new page has been selected.
Description
  Write an OnChange event handler to take specific actions when the active page has changed.
  To access the new active page, access either the <LINK ActivePage,ActivePage> or <LINK ActivePageIndex,ActivePageIndex> properties.
See Also
  OnChanging, ActivePage, ActivePageINdex
----------------------------------------------------------------------------------------------------
@@TJvCustomPageList.OnChanging
Summary
  Occurs immediately before a new page is selected.
Description
  Write an OnChanging event handler to take specific action immediately before the selected page changes.
  Set the AllowChange parameter to false to prevent the change.

  Use an OnChanging event handler to prevent the user from leaving a page until certain conditions have been met.
  An OnChanging event handler can also be used to save information about the current state of the page before it is changed
  by a new page selection.

  To access the currently active page, access either the <LINK ActivePage,ActivePage> or <LINK ActivePageIndex,ActivePageIndex> properties.

Parameters
  Sender      - The page lsit that triggered the event
  PageIndex   - the index of the page that is to become selected
  AllowChange - set to false to disallow the change. This parameter is true by default.
See Also
  OnChange, ActivePage, ActivePageIndex
----------------------------------------------------------------------------------------------------
@@TJvCustomPageList.OnCtl3DChanged
Summary
  Occurs when the Ctl3D property of the page list changes.
Description
  Write an OnCtl3DChanged event handler to take specific action when the Ctl3D property changes.
----------------------------------------------------------------------------------------------------
@@TJvCustomPageList.OnMouseEnter
Summary
  Occurs when the mouse pointer moves over the page list.
Description
  Write an OnMouseEnter event handler to take specific action when the user moves the mouse over the
  page list.
See Also
  OnMouseLeave
----------------------------------------------------------------------------------------------------
@@TJvCustomPageList.OnMouseLeave
Summary
  Occurs when the mouse pointer moves off the page list.
Description
  Write an OnMouseLeave event handler to take specific action when the user moves the mouse off the
  page list. For example, you can use this event to undo changes that were made in an OnMouseEnter
  event handler.
See Also
  OnMouseEnter
----------------------------------------------------------------------------------------------------
@@TJvCustomPageList.OnParentColorChange
Summary
  Occurs when the Parents color changes
Description
  Write an OnParentColorChange event handler to take specific action when the Parents color changes.
----------------------------------------------------------------------------------------------------
@@TJvCustomPageList.PageCount
Summary
  Indicates the number of pages in the <LINK Pages,Pages> array.
Description
  Use PageCount to determine the number of pages listed by the Pages property. PageCount is read-only.

  To add a new page at design-time, right-click the page list and select "New page". To delete a page
  at design-time, right-click the control and select "Delete".

  To add a new page at run-time, create the page dynamically and set it's PageList property to
  the page list control that should contain it. To remove a page at run-time, set it's PageList
  property to nil and then Free the page.
See Also
  Pages
----------------------------------------------------------------------------------------------------
@@TJvCustomPageList.PageList
Summary
  Specifies the internal TList that holds the page instances at run-time.
Description
  PageList is a reference to the internal TList that at run-time holds the TJvCustomPage instances
  that are owned by the control. You should normally not use this property. Instead, use the Pages
  property to directly access the pages in the list.
See Also
  Pages
----------------------------------------------------------------------------------------------------
@@TJvCustomPageList.Pages
Summary
  Lists all the pages in the page list control.
Description
  Use Pages to gain direct access to a particular page in the page list control.
  For example, use Pages to disable individual pages. Specify which page to access using Index,
  where an Index of 0 specifies the first page, an Index of 1 specifies the second page, and so on.
  Each page is a TJvCustomPage or descendant object.

  To locate a page in the page list by it's position relative to another page, use the FindNextPage method.
Note
  Pages is a read-only property. To add a page to a page control at design time, right click and select "New Page".
  To add a page to a page list control at runtime, create the page and set it's PageList property to the page list control.
  To delete a page at design time, right click and selected "Delete". To delete a page at runtime, set it's PageList
  property to nil and then destroy it by calling it's Free method.
See Also
  ActivePage, FindNextPage, PageList
----------------------------------------------------------------------------------------------------
@@TJvCustomPageList.PrevPage
Summary
  Activates the page preceeding the active page.
Description
  Call PrevPage to activate the page preceeding the currently active page. If the first page is active,
  PrevPage moves to the last page. If there are no pages in the list or only one page, PrevPage does nothing.
See Also
  NextPage, FindNextPage
----------------------------------------------------------------------------------------------------
@@TJvCustomPageList.PropagateEnable
Summary
  Specifies if changes to the Enabled property is propagated to the controls parented by the page list.
Description
  Use PropagateEnable to read or specify if child controls are disabled and enabled automatically
  when the Enabled property of the page list changes.

  You cannot access child controls when the parent control is disabled but this is not normally reflected
  visually in Delphi controls. By setting PropagateEnabled to true, the Enabled property of the child controls
  is automatically changed in synch with the Parent component, making it visually obvious that the control
  is disabled or enabled.
See Also
  Enabled
----------------------------------------------------------------------------------------------------
@@TJvCustomPageList.ShowDesignCaption
Summary
  Specifies if page captions are visible at design-time
Description
  Use ShowDesignCaption to specify how the caption of contained pages are shown at design-time. Showing the caption can help
  keep track of which page is currently active without having to select the page list and look at it's ActivePage property in the
  Object Inspector.

  Page captions are always hidden at run-time.
----------------------------------------------------------------------------------------------------
@@TJvCustomPageListTreeView
Summary
  TJvCustomPageListTreeView is the base class for treeviews that has a PageList property of type IPageList.
Description
  Use TJvCustomPageListTreeView as a base class when developing treeview components that should have the
  ability to be associated with an IPageList implementation.

  TJvCustomPageListTreeView has the same functionality as a normal treeview but in addition it can also automatically
  change the active page of an IPageList implementation when the selected node changes. Internally, the TJvCustomPageListTreeView
  component creates it's tree nodes as TJvPageIndexNodes. A TJvPageIndexNode has a PageIndex property that specifies
  which page in the PageList to active when the node is selected.

  Since the nodes in the treeview is surfaced as normal TTreenodes, you must typecast the TTreeNode to
  TJvPageIndexNode in code to access the PageIndex property.

  To put a PageList enabled treeview on a form, don't create instances of TJvCustomPageListTreeView. Use
  the TJvPageListTreeView component instead. TJvPageListTreeView only publishes the properties of
  TJvCustomPageListTreeView without adding any new functionality.
----------------------------------------------------------------------------------------------------
@@TJvCustomPageListTreeView.AboutJVCL
  <INCLUDE JVCL.Main.AboutJVCL.dtx>
----------------------------------------------------------------------------------------------------
@@TJvCustomPageListTreeView.Items
Summary
  Lists the individual nodes that appear in the tree view control.
Description
  Individual nodes in this tree view are TJvPageIndexNode objects but they are surfaced as standard TTreeNode objects. To access the
  additional properties and methods of the TJvPageIndexNode class, you must type cast the node to a TJvPageIndexNode.
  The individual nodes can be accessed by using the Items property along with the item's index into the tree view.
  For example, to access the second item in the tree view, you could use the following code.
  <CODE>
    (Delphi)
      MyTreeNode := TreeView1.Items[1];
    (C++Builder)
      MyTreeNode = TreeView1->Items[1];
  </CODE>

  When setting this property at design-time in the Object Inspector the Tree View Items Editor appears.
  Use the New Item and New SubItem buttons to add items to the tree view. Use the Text property to modify
  what text is displayed in the label of the item.

  At run-time nodes can be added and inserted by using the TTreeNodes methods AddChildFirst,
  AddChild, AddChildObjectFirst, AddChildObject, AddFirst, Add, AddObjectFirst, AddObject, and Insert.

Note
  Accessing tree view items by index can be time-intensive, particularly when the tree view contains many items.
  For optimal performance, try to design your application so that it has as few dependencies on the tree views
  item index as possible.
See Also
  AddChildFirst, AddChild, AddChildObjectFirst, AddChildObject, AddFirst, Add, AddObjectFirst, AddObject, Insert, TJvPageIndexNode
----------------------------------------------------------------------------------------------------
@@TJvCustomPageListTreeView.OnCtl3DChanged
Summary
  Occurs when the Ctl3D property of the treeview changes.
Description
  Write an OnCtl3DChanged event handler to take specific action when the Ctl3D property changes.
----------------------------------------------------------------------------------------------------
@@TJvCustomPageListTreeView.OnMouseEnter
Summary
  Occurs when the mouse pointer moves over the treeview.
Description
  Write an OnMouseEnter event handler to take specific action when the user moves the mouse over the
  treeview.
See Also
  OnMouseLeave
----------------------------------------------------------------------------------------------------
@@TJvCustomPageListTreeView.OnMouseLeave
Summary
  Occurs when the mouse pointer moves off the treeview.
Description
  Write an OnMouseLeave event handler to take specific action when the user moves the mouse off the
  treeview. For example, you can use this event to undo changes that were made in an OnMouseEnter
  event handler.
See Also
  OnMouseEnter
----------------------------------------------------------------------------------------------------
@@TJvCustomPageListTreeView.OnParentColorChange
Summary
  Occurs when the Parents color changes
Description
  Write an OnParentColorChange event handler to take specific action when the Parents color changes.
----------------------------------------------------------------------------------------------------
@@TJvCustomPageListTreeView.PageDefault
Summary
  Specifies the index of the default page.
Description
  Use DefaultPage to specify the value of the PageIndex property for new nodes. For example,
  settings this property to 0 will set the PageIndex of new nodes to 0, setting it to 1 will
  set the Pageindex to 1, etc.
See Also
  PageLinks, PageList
----------------------------------------------------------------------------------------------------
@@TJvCustomPageListTreeView.PageLinks
Summary
  Used at design-time to set up the assocaition between tree nodes and pages in a PageList.
Description
  This property is only used at design-time to set up the association between a node and the page that
  should be displayed by the IPageList implementation when that node is selected. To set up a page link association
  at run-time, type cast the tree node to TJvPageIndexNode and set it's PageIndex property.
  Example:
  <CODE>
    TJvPageIndexNode(Jv
  The linking will only have effect if the PageList property has been assigned.
See Also
  PageList, TJvPageIndexNode.PageIndex
----------------------------------------------------------------------------------------------------
@@TJvCustomPageListTreeView.PageList
Summary
  Specifies the IPageList implementation
Description
  Use the PageList property to associate an IPageList implementation with the treeview. If a PageList is assigned,
  the active page of the page list will change autmatically when the user selects a new node in the treeview. The page
  that is activated is determined by the value of the selected nodes PageIndex property.

See Also
  List here other properties, methods (comma seperated)
  Remove the 'See Also' section if there are no references
----------------------------------------------------------------------------------------------------
@@TJvCustomSettingsTreeView
Summary
  TJvCustomSettingsTreeView is a treeview that behaves like the tree view in the Options Dialog in VS.net
Description
  TJvCustomSettingsTreeView is a base class for treeviews that behave like the
  treeview in the Settings Dialog in Visual Studio: When a node in the treeview
  is selected, a new page of settings is shown on a panel to the right.

  Specifically, the following is true:

  * The normal ImageIndex/SelectedIndex is ignored for nodes - use PageNodeImages instead. You still
    need to assign a TImageList to the Images property
  * When a node is expanded, it is assigned the expanded image until it is collapsed, regardless
    whether it's selected or not
  * When a parent folder is selected, the first non-folder child has it's
    normal image set as the selected image
  * By default, AutoExpand and ReadOnly is true, ShowButtons and ShowLines are false

  Other than that, it should work like a normal TreeView. Note that the treeview was designed with AutoExpand = true
  in mind but should work with AutoExpand = false

  To get the VS look , Images should contain:
    Image 0: Closed Folder
    Image 1: Open Folder
    Image 2: Right-pointing teal-colored arrow

    PageNodeImages should then be set to (the defaults):
      ClosedFolder = 0;
      ImageIndex = -1; (no image)
      OpenFolder = 1;
      SelectedIndex = 2;
----------------------------------------------------------------------------------------------------
@@TJvCustomSettingsTreeView.OnGetImageIndex
Summary
  Occurs when the tree view looks up the ImageIndex of a node.
Description
  Write an OnGetImageIndex event handler to change the image index for the particular
  node before it is drawn. For example, the bitmap of a node can be changed to indicate
  a different state for the node.
See Also
  ImageIndex, Images, OnGetSelectedIndex
----------------------------------------------------------------------------------------------------
@@TJvCustomSettingsTreeView.OnGetSelectedIndex
Summary
  Occurs when the tree view looks up the SelectedIndex of a node.
Description
  Write an OnGetSelectedIndex event handler to change the selected image index of a node before it is drawn.
See Also
  OnGetImageIndex, Images, ImageIndex
----------------------------------------------------------------------------------------------------
@@TJvCustomSettingsTreeView.PageNodeImages
Summary
  Specifies the images to use for the different states of the nodes.
Description
  use PageNodeImages to specify what images to use for the different states a node can be in. The recognized
  states are normal, selected, expanded and collapsed.
See Also
  TJvSettingsTreeImages, Images  
----------------------------------------------------------------------------------------------------
@@TJvPageCanPaintEvent
<TITLE TJvPageCanPaintEvent type>
<COMBINE TJvCustomPage.OnBeforePaint>
----------------------------------------------------------------------------------------------------
@@TJvPageChangingEvent
<TITLE TJvPageChangingEvent type>
<COMBINE TJvCustomPageList.OnChanging>
----------------------------------------------------------------------------------------------------
@@TJvPageIndexNode
Summary
  A tree node class that has an additional PageIndex property
Description
  TJvPageIndexNode is the class for nodes created by the TJvPageListTreeView component.
----------------------------------------------------------------------------------------------------
@@TJvPageIndexNode.Assign
Summary
  Copies the properties of another node.
Description
  It the Source parameter is a TJvPageIndexNode object, Assign copies it's
  properties to this node. Otherwise, Assign calls the inherited method so
  that any object that copies properties to a TJvPageIndexNode in it's AssignTo method can do so.
Parameters
  Source - The object to copy
See Also
  AssignTo
----------------------------------------------------------------------------------------------------
@@TJvPageIndexNode.PageIndex
Summary
  Specifies the page index of the node.
Description
  Use PageIndex to specify which page in an associated IPageList implementation should be activated when the node is selected.
See Also
  PageList
----------------------------------------------------------------------------------------------------
@@TJvPageIndexNodes
Summary
  TJvPageIndexNodes maintains a list of TJvPageIndexNode nodes in a tree view control.
Description
  The Items property of the TJvCustomPageListTreeView is a TJvPageIndexNodes object and maintains the collection of
  nodes in the tree view. Nodes can be added, deleted, inserted, and moved within the tree view.
  Access the nodes in the tree view through the Items property of the tree view. 
----------------------------------------------------------------------------------------------------
@@TJvPageLinks
Summary
  Class used to facilitate linking nodes to pages in a page list.
Description
  This class is only used at design-time and is provided to activate the design-time editor for setting up links between tree nodes and
  the pages in an IPageList implementation. Do not try to use this class or it's methods as it isn't a "real" class.
----------------------------------------------------------------------------------------------------
@@TJvPageLinks.TreeView
Summary
  Specifies the TreeView that is the "parent" of the TJvPageLinks instance
----------------------------------------------------------------------------------------------------
@@TJvPageList
<TITLEIMG TJvPageList>
JVCLInfo
  GROUP=JVCL.??
  FLAG=Component
Summary
  TJvPageList implements the IPageList interface
Description
  TJvPageList is derived from TJvCustomPageList and publishes most of it's properties but doesn't add any new functionality.
----------------------------------------------------------------------------------------------------
@@TJvPageListTreeView
<TITLEIMG TJvPageListTreeView>
JVCLInfo
  GROUP=JVCL.??
  FLAG=Component
Summary
  TJvPageListTreeView is a treeview that can be associated with an IPageList implementation.
Description
  TJvPageListTreeView is derived from TJvCustomPageListTreeView and publishes most of it's properties but doesn't add any new functionality.
----------------------------------------------------------------------------------------------------
@@TJvPagePaintEvent
<TITLE TJvPagePaintEvent type>
Summary
  TJvPagePaintEvent is used for events that allows you to paint in a specific area on a canvas
Description
  The TJvPagePaintEvent type is the type for events that allows custom painting on a specified area of a canvas. For example, the
  OnAfterPaint and OnPaint events of TJvCustomPage is of this type.
  TNotifyEvent
Parameters
  Sender  - The class that triggered the event
  ACanvas - The canvas to draw on
  ARect   - The area on the canvas to draw inside
See Also
  TJvCustomPage.OnAfterPaint, TJvCustomPage.OnPaint, TJvPagePaintingEvent
----------------------------------------------------------------------------------------------------
@@TJvSettingsTreeImages
Summary
  Property class for setting up usage of images from an image list.
Description
  TJvSettingsTreeImages is a property class that describes the images used in a
  TJvCustomSettingsTreeView as the usage of images in this control differs from a normal TreeView
----------------------------------------------------------------------------------------------------
@@TJvSettingsTreeImages.CollapsedIndex
Summary
  Specifies which image is displayed when a node with children is in it's collapsed state.
Description
  Use the CollapsedIndex property with the Images property of the tree view to specify the image for the node in it's collapsed state.
  If the node doesn't have any children, use the ImageIndex and SelectedIndex properties instead.
See Also
  ExpandedIndex, ImageIndex, SelectedIndex
----------------------------------------------------------------------------------------------------
@@TJvSettingsTreeImages.ExpandedIndex
Summary
  Specifies which image is displayed when a node with children is in it's expanded state.
Description
  Use the ExpandedIndex property with the Images property of the tree view to specify the image for the node in it's
  expanded state. If the node doesn't have any children, use the ImageIndex and SelectedIndex properties instead.
See Also
  CollapsedIndex, ImageIndex, SelectedIndex
----------------------------------------------------------------------------------------------------
@@TJvSettingsTreeImages.ImageIndex
Summary
  Specifies which image is displayed when a node is in it's normal state and is not currently selected.
Description
  Use the ImageIndex property with the Images property of the tree view to specify the image for the node in it's normal state.
  If the node has childrens, use the ExpandedIndex and CollapsedIndex properties instead.
See Also
  CollapsedIndex, ExpandedIndex, SelectedIndex
----------------------------------------------------------------------------------------------------
@@TJvSettingsTreeImages.SelectedIndex
Summary
  Specifies which image is displayed when a node is in it's selected state.
Description
  Use the SelectedIndex property with the Images property of the tree view to specify the image for the node in it's selected state.
  If the node has childrens, use the ExpandedIndex and CollapsedIndex properties instead.
See Also
  CollapsedIndex, ExpandedIndex, ImageIndex
----------------------------------------------------------------------------------------------------
@@TJvSettingsTreeImages.TreeView
Summary
  Specifies the treeview that this class is acting upon.
Description
  The TreeView property is used internally to reference the treeview the class is operating on. Only component developers might need
  to access this property.
----------------------------------------------------------------------------------------------------
@@TJvSettingsTreeView
<TITLEIMG TJvSettingsTreeView>
JVCLInfo
  GROUP=JVCL.??
  FLAG=Component
Summary
  TJvSettingsTreeView is a treeview that behaves like the treeview in the Options Dialog in VS.Net.
Description
  TJvSettingsTreeView is derived from TJvCustomSettingsTreeView and publishes it's properties but it
  does not add any new functionality. 
----------------------------------------------------------------------------------------------------
@@TJvShowDesignCaption
<TITLE TJvShowDesignCaption type>
Summary
  TJvShowDesignCaption is the type of the ShowDesignCaption property of the TJvCustomPageList component
Description
  TJvShowDesignCaption can have one of the following values:
@@TJvShowDesignCaption.sdcNone
  Don't show any caption
@@TJvShowDesignCaption.sdcTopLeft
  Show the caption in the top left corner of the page
@@TJvShowDesignCaption.sdcTopCenter
  Show the caption in the center of the page
@@TJvShowDesignCaption.sdcTopRight
  Show the caption in the top right of the page
@@TJvShowDesignCaption.sdcLeftCenter
  Show the caption in the left center of the page
@@TJvShowDesignCaption.sdcCenter
  Show the caption in the center of the page
@@TJvShowDesignCaption.sdcRightCenter
  Show the caption in the right center of the page
@@TJvShowDesignCaption.sdcBottomLeft
  Show the caption in the bottom left corner of the page
@@TJvShowDesignCaption.sdcBottomCenter
  Show the caption in the bottom center of the page
@@TJvShowDesignCaption.sdcBottomRight
  Show the caption in the bottom right corner of the page
----------------------------------------------------------------------------------------------------
@@TJvStandardPage
Summary
  Class that represents a page in a page list control.
Description
  TJvStandardPage derives from TJvCustomPage and publishes it's properties but does not
  add any new functionality.
